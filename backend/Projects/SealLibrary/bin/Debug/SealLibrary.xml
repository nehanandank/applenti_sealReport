<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SealLibrary</name>
    </assembly>
    <members>
        <member name="T:Seal.Forms.NamespaceDoc">
            <summary>
            Converter Objects
            </summary>
        </member>
        <member name="F:Seal.Forms.AboutBoxForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Seal.Forms.AboutBoxForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Seal.Forms.AboutBoxForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Seal.Forms.FormHelper.NamespaceDoc">
            <summary>
            Windows Forms Objects and Helpers
            </summary>
        </member>
        <member name="F:Seal.Forms.SmartCopyForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Seal.Forms.SmartCopyForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Seal.Forms.SmartCopyForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Seal.Forms.TemplateTextEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Seal.Forms.TemplateTextEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Seal.Forms.TemplateTextEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Seal.Forms.ReportViewerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Seal.Forms.ReportViewerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Seal.Forms.ReportViewerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Seal.Forms.ExecutionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Seal.Forms.ExecutionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Seal.Forms.ExecutionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Seal.Forms.MultipleSelectForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Seal.Forms.MultipleSelectForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Seal.Forms.MultipleSelectForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Seal.Forms.SQLEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Seal.Forms.SQLEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Seal.Forms.SQLEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Seal.Model.PartialTemplatesEditor">
            <summary>
            Editor for a list of partial templates
            </summary>
        </member>
        <member name="T:Seal.Model.ValidationException">
            <summary>
            Exception that should not be logged or audited
            </summary>
        </member>
        <member name="T:Seal.Model.LoginException">
            <summary>
            Exception for Login process
            </summary>
        </member>
        <member name="T:Seal.Model.SessionLostException">
            <summary>
            Exception for Session Lost
            </summary>
        </member>
        <member name="T:Seal.Model.Audit">
            <summary>
            Class dedicated to log events for audit purpose
            </summary>
        </member>
        <member name="M:Seal.Model.Audit.LogReportAudit(Seal.Model.Report,Seal.Model.ReportSchedule)">
            <summary>
            Audit a report execution
            </summary>
        </member>
        <member name="M:Seal.Model.Audit.LogEventAudit(Seal.Model.AuditType,System.String)">
            <summary>
            Audit an eventn
            </summary>
        </member>
        <member name="M:Seal.Model.Audit.LogAudit(Seal.Model.AuditType,Seal.Model.SecurityUser,System.String,System.String,System.String,Seal.Model.Report,Seal.Model.ReportSchedule)">
            <summary>
            Executes the audit script for a given event
            </summary>
        </member>
        <member name="T:Seal.Model.ExecutionLogInterface">
            <summary>
            Log interface used during the report execution
            </summary>
        </member>
        <member name="M:Seal.Model.ExecutionLogInterface.IsJobCancelled">
            <summary>
            True if the Job is cancelled
            </summary>
        </member>
        <member name="M:Seal.Model.ExecutionLogInterface.Log(System.String,System.Object[])">
            <summary>
            Log the text with optional parameters
            </summary>
        </member>
        <member name="M:Seal.Model.ExecutionLogInterface.LogNoCR(System.String,System.Object[])">
            <summary>
            Log the text with optional parameters with no Carriage Return/Line Feed
            </summary>
        </member>
        <member name="M:Seal.Model.ExecutionLogInterface.LogRaw(System.String,System.Object[])">
            <summary>
            Log the text with optional parameters without any Timestamp
            </summary>
        </member>
        <member name="T:Seal.Model.DummyLogInterface">
            <summary>
            Dummy implementation of the Log interface
            </summary>
        </member>
        <member name="T:Seal.Model.ConsoleLog">
            <summary>
            Console implementation of the Log interface
            </summary>
        </member>
        <member name="T:Seal.Model.StringLog">
            <summary>
            String implementation of the Log interface
            </summary>
        </member>
        <member name="T:Seal.Model.CategoryFolder">
            <summary>
            Helper to change the category folder of elements
            </summary>
        </member>
        <member name="P:Seal.Model.CategoryFolder.Path">
            <summary>
            The full path of the of the category. This can be modified to change globally all the category names of the columns. The category path can be specified using the '/' character (e.g. '/Master/Name1/Name2')
            </summary>
        </member>
        <member name="T:Seal.Model.MenuReportViewsPool">
            <summary>
            Static object dedicated to manage the list of Menu reports in the repository
            </summary>
        </member>
        <member name="M:Seal.Model.MenuReportViewsPool.ForceReload">
            <summary>
            Force a browsing of all reports to reload the list
            </summary>
        </member>
        <member name="P:Seal.Model.MenuReportViewsPool.MenuReportViews">
            <summary>
            Dictionary containing the Menu reports in the repository 
            </summary>
        </member>
        <member name="T:Seal.Model.MetaTableTemplate">
            <summary>
            Template for NoSQL Meta Tables.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTableTemplate.Name">
            <summary>
            Name 
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTableTemplate.FilePath">
            <summary>
            Current file path
            </summary>
        </member>
        <member name="F:Seal.Model.MetaTableTemplate.LastModification">
            <summary>
            Last modification date time
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTableTemplate.Configuration">
            <summary>
            Current Configuration
            </summary>
        </member>
        <member name="M:Seal.Model.MetaTableTemplate.LoadTemplates(System.String)">
            <summary>
            List of available Table Templates
            </summary>
        </member>
        <member name="T:Seal.Model.MetaTableLink">
            <summary>
            Link to a MetaTable of another MetaSource
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTableLink.Source">
            <summary>
            Current MetaSource
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTableLink.MetaTable">
            <summary>
            Current MetaTable of the link
            </summary>
        </member>
        <member name="F:Seal.Model.MetaTableLink.IsEditable">
            <summary>
            True if the link is editable
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTableLink.DisplayName">
            <summary>
            Display name of the link
            </summary>
        </member>
        <member name="T:Seal.Model.Navigation">
            <summary>
            A navigation for a given ReportExecution and NavigationLink
            </summary>
        </member>
        <member name="T:Seal.Model.NavigationContext">
            <summary>
            Class to perform the navigation (sub-report or drill)
            </summary>
        </member>
        <member name="T:Seal.Model.NavigationLink">
            <summary>
            A link to handle a navigation from an element
            </summary>
        </member>
        <member name="F:Seal.Model.NavigationLink.Tag">
            <summary>
            User defined tag that may be used in the Navigation Script to identify the link
            </summary>
        </member>
        <member name="F:Seal.Model.NavigationLink.ScriptResult">
            <summary>
            The result expected after the navigation script is executed
            For File Download: the file path 
            </summary>
        </member>
        <member name="F:Seal.Model.NavigationLink.Parameters">
            <summary>
            Optional parameters that can be used in the navigation script (e.g. form values for a custom script)
            </summary>
        </member>
        <member name="F:Seal.Model.NavigationLink.Request">
            <summary>
            Current Request that can be used in the Navigation Script (e.g. getting a file upload) 
            </summary>
        </member>
        <member name="T:Seal.Model.OutputEmailDevice">
            <summary>
            OutputEmailDevice is an implementation of a SMTP Server device to send report result by emails. 
            </summary>
        </member>
        <member name="M:Seal.Model.OutputEmailDevice.Create">
            <summary>
            Create a basic OutputEmailDevice
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.FullName">
            <summary>
            Full name
            </summary>
        </member>
        <member name="F:Seal.Model.OutputEmailDevice.LastModification">
            <summary>
            Last modification date time
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.Server">
            <summary>
            SMTP Email Server name
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.Port">
            <summary>
            SMTP Port used to connect to the server
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.UserName">
            <summary>
            The user name used to connect to the SMTP server
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.Password">
            <summary>
            The password
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.ClearPassword">
            <summary>
            The clear password used to connect to the SMTP server
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.SenderEmail">
            <summary>
            The sender email address used to send the email
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.ReplyTo">
            <summary>
            The reply addresses used for the email
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.DeliveryMethod">
            <summary>
            Specifies how outgoing email messages will be handled
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.EnableSsl">
            <summary>
            If true, the client uses Secure Socket Layer
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.Timeout">
            <summary>
            Amount of time in milli-seconds after which the email is not sent
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.UseDefaultCredentials">
            <summary>
            If true, the default credentials are used
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.UsedForNotification">
            <summary>
            If true, this email device will be chosen first to be used for notifications. (e.g. sending an email in case of error in a schedule)
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.ChangeSender">
            <summary>
            If true, the Email Sender or Reply address can be changed in the Report Designer or the Web Report Designer
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.TestEmailTo">
            <summary>
            The destination email address used to send the test email
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.HelperTestEmail">
            <summary>
            Editor Helper: Send a test email with the current configuration
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.Information">
            <summary>
            Last information message
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.Error">
            <summary>
            Last error message
            </summary>
        </member>
        <member name="M:Seal.Model.OutputEmailDevice.LoadFromFile(System.String,System.Boolean)">
            <summary>
            Load an OutputEmailDevice from a file
            </summary>
        </member>
        <member name="M:Seal.Model.OutputEmailDevice.SaveToFile">
            <summary>
            Save to current file
            </summary>
        </member>
        <member name="M:Seal.Model.OutputEmailDevice.SaveToFile(System.String)">
            <summary>
            Save to a file
            </summary>
        </member>
        <member name="M:Seal.Model.OutputEmailDevice.Validate">
            <summary>
            Validate the device
            </summary>
        </member>
        <member name="M:Seal.Model.OutputEmailDevice.Process(Seal.Model.Report)">
            <summary>
            Send the report result by email using the device configuration
            </summary>
        </member>
        <member name="P:Seal.Model.OutputEmailDevice.SmtpClient">
            <summary>
            Current SmtpClient
            </summary>
        </member>
        <member name="M:Seal.Model.OutputEmailDevice.SendTestEmail">
            <summary>
            Helper to send a test email
            </summary>
        </member>
        <member name="T:Seal.Model.OutputFileServerDevice">
            <summary>
            OutputFileServerDevice is an implementation of device that save the report result to a file server (FTP, SFTP, etc.).
            </summary>
        </member>
        <member name="F:Seal.Model.OutputFileServerDevice.ProcessingScriptTemplate">
            <summary>
            Default processing script template
            </summary>
        </member>
        <member name="F:Seal.Model.OutputFileServerDevice.LastModification">
            <summary>
            Last modification date time
            </summary>
        </member>
        <member name="M:Seal.Model.OutputFileServerDevice.Create">
            <summary>
            Create a basic OutputFolderDevice
            </summary>
        </member>
        <member name="P:Seal.Model.OutputFileServerDevice.FullName">
            <summary>
            Full name
            </summary>
        </member>
        <member name="P:Seal.Model.OutputFileServerDevice.Protocol">
            <summary>
            Protocol to connect to the server
            </summary>
        </member>
        <member name="P:Seal.Model.OutputFileServerDevice.HostName">
            <summary>
            File Server host name
            </summary>
        </member>
        <member name="P:Seal.Model.OutputFileServerDevice.PortNumber">
            <summary>
            Port number used to connect to the server (e.g. 21 for FTP, 22 for SFTP, 990 for FTPS, etc.)
            </summary>
        </member>
        <member name="P:Seal.Model.OutputFileServerDevice.Directories">
            <summary>
            List of directories allowed on the file server. One per line or separated by semi-column.
            </summary>
        </member>
        <member name="P:Seal.Model.OutputFileServerDevice.DirectoriesArray">
            <summary>
            Array of allowed directories.
            </summary>
        </member>
        <member name="P:Seal.Model.OutputFileServerDevice.UserName">
            <summary>
            The user name used to connect to the File Server
            </summary>
        </member>
        <member name="P:Seal.Model.OutputFileServerDevice.Password">
            <summary>
            The password
            </summary>
        </member>
        <member name="P:Seal.Model.OutputFileServerDevice.ClearPassword">
            <summary>
            The clear password used to connect to the File Server
            </summary>
        </member>
        <member name="P:Seal.Model.OutputFileServerDevice.ProcessingScript">
            <summary>
            Script executed when the output is processed. The script can be modified to change the client settings (e.g. configuring FTPS).
            </summary>
        </member>
        <member name="P:Seal.Model.OutputFileServerDevice.Information">
            <summary>
            Last information message
            </summary>
        </member>
        <member name="P:Seal.Model.OutputFileServerDevice.Error">
            <summary>
            Last error message
            </summary>
        </member>
        <member name="M:Seal.Model.OutputFileServerDevice.Process(Seal.Model.Report)">
            <summary>
            Check that the report result has been saved and set information
            </summary>
        </member>
        <member name="M:Seal.Model.OutputFileServerDevice.LoadFromFile(System.String,System.Boolean)">
            <summary>
            Load an OutputFileServerDevice from a file
            </summary>
        </member>
        <member name="M:Seal.Model.OutputFileServerDevice.SaveToFile">
            <summary>
            Save to current file
            </summary>
        </member>
        <member name="M:Seal.Model.OutputFileServerDevice.SaveToFile(System.String)">
            <summary>
            Save to a file
            </summary>
        </member>
        <member name="M:Seal.Model.OutputFileServerDevice.Validate">
            <summary>
            Validate the device
            </summary>
        </member>
        <member name="M:Seal.Model.OutputFileServerDevice.TestConnection">
            <summary>
            Helper to test the connection
            </summary>
        </member>
        <member name="P:Seal.Model.OutputFileServerDevice.HelperTestConnection">
            <summary>
            Editor Helper: Test the connection with the current configuration
            </summary>
        </member>
        <member name="T:Seal.Model.OutputFolderDevice">
            <summary>
            OutputFolderDevice is an implementation of device that save the report result to a file. 
            </summary>
        </member>
        <member name="F:Seal.Model.OutputFolderDevice.DefaultGUID">
            <summary>
            Default device identifier
            </summary>
        </member>
        <member name="M:Seal.Model.OutputFolderDevice.Create">
            <summary>
            Create a basic OutputFolderDevice
            </summary>
        </member>
        <member name="P:Seal.Model.OutputFolderDevice.FullName">
            <summary>
            Full name
            </summary>
        </member>
        <member name="M:Seal.Model.OutputFolderDevice.Process(Seal.Model.Report)">
            <summary>
            Check that the report result has been saved and set information
            </summary>
        </member>
        <member name="M:Seal.Model.OutputFolderDevice.SaveToFile">
            <summary>
            Dummy function
            </summary>
        </member>
        <member name="M:Seal.Model.OutputFolderDevice.SaveToFile(System.String)">
            <summary>
            Dummy function
            </summary>
        </member>
        <member name="M:Seal.Model.OutputFolderDevice.Validate">
            <summary>
            Dummy function
            </summary>
        </member>
        <member name="T:Seal.Model.ParametersEditor">
            <summary>
            Generic editor for parameter values
            </summary>
        </member>
        <member name="T:Seal.Model.ReportTask">
            <summary>
            A ReportTask defines the exection of a task: SQL statement or Razor script
            </summary>
        </member>
        <member name="M:Seal.Model.ReportTask.Create">
            <summary>
            Creates a basic ReportTask
            </summary>
        </member>
        <member name="M:Seal.Model.ReportTask.InitReferences">
            <summary>
            Init all references of the task
            </summary>
        </member>
        <member name="P:Seal.Model.ReportTask.SourceGUID">
            <summary>
            Identifier of the current report source
            </summary>
        </member>
        <member name="P:Seal.Model.ReportTask.ConnectionGUID">
            <summary>
            The connection identifier used by the task
            </summary>
        </member>
        <member name="P:Seal.Model.ReportTask.Enabled">
            <summary>
            If false, the task is ignored and not executed
            </summary>
        </member>
        <member name="P:Seal.Model.ReportTask.Step">
            <summary>
            The Report Execution Step to execute the task. By default, tasks are executed before the models generation.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportTask.Connection">
            <summary>
            Current MetaConnection
            </summary>
        </member>
        <member name="P:Seal.Model.ReportTask.Source">
            <summary>
            Current ReportSource
            </summary>
        </member>
        <member name="P:Seal.Model.ReportTask.Repository">
            <summary>
            Current Repository
            </summary>
        </member>
        <member name="P:Seal.Model.ReportTask.SQL">
            <summary>
            SQL Statement executed for the task. It may be empty if a Razor Script is defined. The statement may contain Razor script if it starts with '@'. If the SQL result returns 0, the report is cancelled and the next tasks are not executed.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportTask.Script">
            <summary>
            Razor script executed for the Task. It may be empty if the SQL Script is defined. If the script returns 0, the report is cancelled and the next tasks are not executed.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportTask.IgnoreError">
            <summary>
            If true, errors occuring during the task execution are ignored and the report execution continues
            </summary>
        </member>
        <member name="P:Seal.Model.ReportTask.ExecuteForEachConnection">
            <summary>
            If true, the task will be executed for each connection defined in the Data Source. If false, only the current connection is used.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportTask.SortOrder">
            <summary>
            Order of the task amongst the tasks of the report
            </summary>
        </member>
        <member name="F:Seal.Model.ReportTask.Tag">
            <summary>
            Custom Tag the can be used at execution time to store any object
            </summary>
        </member>
        <member name="M:Seal.Model.ReportTask.GetSort">
            <summary>
            Returns the order of the task
            </summary>
        </member>
        <member name="F:Seal.Model.ReportTask.Progression">
            <summary>
            Current progression of the task in percentage
            </summary>
        </member>
        <member name="F:Seal.Model.ReportTask.Execution">
            <summary>
            The current report execution executing the task
            </summary>
        </member>
        <member name="P:Seal.Model.ReportTask.Information">
            <summary>
            Last information message
            </summary>
        </member>
        <member name="P:Seal.Model.ReportTask.Error">
            <summary>
            Last error message
            </summary>
        </member>
        <member name="F:Seal.Model.ReportTask.DbInfoMessage">
            <summary>
            Information message for database
            </summary>
        </member>
        <member name="M:Seal.Model.ReportTask.LogMessage(System.String,System.Object[])">
            <summary>
            Log Interface implementation
            </summary>
        </member>
        <member name="M:Seal.Model.ReportTask.Cancel">
            <summary>
            Cancel the task
            </summary>
        </member>
        <member name="M:Seal.Model.ReportTask.GetDbCommand(Seal.Model.MetaConnection)">
            <summary>
            Returns a DbCommand from a MetaConnection
            </summary>
        </member>
        <member name="M:Seal.Model.ReportTask.Execute">
            <summary>
            Executes the task
            </summary>
        </member>
        <member name="M:Seal.Model.ReportTask.Execute(Seal.Model.MetaConnection)">
            <summary>
            Executes the task with a given connection
            </summary>
            <param name="currentConnection"></param>
        </member>
        <member name="T:Seal.Model.ReportSchedule">
            <summary>
            A ReportSchedule defines a schedule on a ReportOutput. Schedules are using Tasks of the Windows Task Scheduler.
            </summary>
        </member>
        <member name="M:Seal.Model.ReportSchedule.Create">
            <summary>
            Create a basic ReportSchedule
            </summary>
            <returns></returns>
        </member>
        <member name="P:Seal.Model.ReportSchedule.OutputGUID">
            <summary>
            Identifier of the output
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.IsTasksSchedule">
            <summary>
            If true, the schedule is executed without output definition. It may be used to schedule reports having only tasks. The default view of the report is used for the execution.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.SealEnabled">
            <summary>
            True if the schedule is enabled
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.SealStart">
            <summary>
            Start date and time of the schedule
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.SealEnd">
            <summary>
            End date and time of the schedule
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.SealType">
            <summary>
            Type of schedule trigger
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.SealDaysInterval">
            <summary>
            Number of days
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.SealWeeksInterval">
            <summary>
            Number of weeks
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.SealWeekdays">
            <summary>
            Days of the week to execute the schedule
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.SealMonths">
            <summary>
            Months to execute the schedule
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.SealDays">
            <summary>
            Days of the month to execute the schedule
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.SealRepeatInterval">
            <summary>
            Interval of the schedule repetition
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.SealRepeatDuration">
            <summary>
            Duration of the schedule repetition
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.SealNextExecution">
            <summary>
            Next execution planned for the schedule
            </summary>
        </member>
        <member name="F:Seal.Model.ReportSchedule._sealSchedule">
            <summary>
            Current schedule if the Seal Scheduler is used
            </summary>
        </member>
        <member name="M:Seal.Model.ReportSchedule.GetTaskSourceDetail(System.String,System.Int32)">
            <summary>
            Returns a given line from the Task Source Detail
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.SealDaysString">
            <summary>
            Days of the Seal Schedule in a text
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.SealWeekdaysString">
            <summary>
            Weekdays of the Seal Schedule a text
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.SealMonthsString">
            <summary>
            Months of the Seal Schedule a text
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.TaskSource">
            <summary>
            Task source name
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.TaskName">
            <summary>
            Task name as used in the Windows Task Scheduler or for the Seal Schedule file name.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.IsEnabled">
            <summary>
            Indicates if the task is enabled. Tasks can be enabled or disabled using the Task Scheduler Microsoft Management Console.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.LastRunTime">
            <summary>
            Last time the task was executed
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.NextRunTime">
            <summary>
            Next time the task will be executed
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.NotificationEmailTo">
            <summary>
            The destination (To) email addresses used for the email notification in case of success. One per line or separated by semi-column.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.NotificationEmailSubject">
            <summary>
            The subject of the email sent in case of success. If empty, the report name is used.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.NotificationEmailBody">
            <summary>
            The body of the email sent in case of success. If empty, a default text is used.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.NotificationEmailFrom">
            <summary>
            The sender (From) email address used to send the email in case of success. If empty the default address configured in the device is used. Make sure that the SMTP server allows the new address.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.ErrorNumberOfRetries">
            <summary>
            The maximum number of retries in case of error
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.ErrorMinutesBetweenRetries">
            <summary>
            The number of minutes elapsed between a retry
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.ErrorEmailTo">
            <summary>
            The destination (To) email addresses used for the email in case of error. One per line or separated by semi-column.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.ErrorEmailSendMode">
            <summary>
            Specify if the email is sent for the first, the last or for each failure
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.ErrorEmailSubject">
            <summary>
            The subject of the email sent in case of error. If empty, the report name is used.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.ErrorEmailFrom">
            <summary>
            The sender (From) email address used to send the email in case of error. If empty the default address configured in the device is used. Make sure that the SMTP server allows the new address.
            </summary>
        </member>
        <member name="M:Seal.Model.ReportSchedule.SynchronizeTask">
            <summary>
            Synchronize the task with the Windows Task Scheduler
            </summary>
        </member>
        <member name="M:Seal.Model.ReportSchedule.FindTask">
            <summary>
            Find the Task from the Windows Task Scheduler
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.Task">
            <summary>
            The current Windows Task
            </summary>
        </member>
        <member name="F:Seal.Model.ReportSchedule.Tag">
            <summary>
            Object that can be used at run-time for any purpose
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.Output">
            <summary>
            ReportOutput of the schedule
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.OutputName">
            <summary>
            The report output name of this schedule
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.HelperEditProperties">
            <summary>
            Editor Helper: Edit the report schedule properties
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSchedule.HelperRunTaskScheduler">
            <summary>
            Editor Helper: Run Task Scheduler MMC
            </summary>
        </member>
        <member name="T:Seal.Model.ReportOutput">
            <summary>
            A ReportOutput defines the execution of a report on an OutputDevice (Folder or Email)
            </summary>
        </member>
        <member name="M:Seal.Model.ReportOutput.Create">
            <summary>
            Basic creation
            </summary>
        </member>
        <member name="M:Seal.Model.ReportOutput.InitReferences">
            <summary>
            Init all references
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.OutputDeviceGUID">
            <summary>
            Identifier of the output device used by the output
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.DeviceName">
            <summary>
            The device used by this output
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.CancelIfNoRecords">
            <summary>
            If the models of the report do not have any record, the output generation is cancelled
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.PreScript">
            <summary>
            Optional Razor script executed before the generation. If the script returns 0, the generation is aborted.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.PostScript">
            <summary>
            Optional Razor script executed after the generation
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.ViewParameters">
            <summary>
            Custom parameters used for the Root View when the output is executed
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.ViewGUID">
            <summary>
            The view used to execute the report output
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.FolderPath">
            <summary>
            Path of the folder used to generate the report result.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.FileName">
            <summary>
            The name of the file used to generate the report result
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.EmailTo">
            <summary>
            The destination (To) email addresses used for the email. One per line or separated by semi-column.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.EmailCC">
            <summary>
            The email CC (Carbon Copy) addresses used for the email. One per line or separated by semi-column.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.EmailBCC">
            <summary>
            The email BCC (Blind Carbon Copy) addresses used for the email. One per line or separated by semi-column.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.EmailFrom">
            <summary>
            The email address of the sender (From). If empty, the sender email address defined in the device is used. Make sure that the SMTP server allows the new address.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.EmailReplyTo">
            <summary>
            The reply addresses used for the email. One per line or separated by semi-column. If empty, the reply addresses defined in the device are used.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.EmailSubject">
            <summary>
            The subject of the email sent. If empty, the report name is used.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.EmailHtmlBody">
            <summary>
            If true, the report result is copied in the email body message
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.EmailMessagesInBody">
            <summary>
            If true, the report execution messages are copied in the email body message
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.EmailBody">
            <summary>
            The body message of the email sent. If empty, a default text is used.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.EmailSkipAttachments">
            <summary>
            If true, the email sent will have no attachement. This may be useful if the report has only tasks.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.EmailZipAttachments">
            <summary>
            This property is obsolete. Use ZipResult instead. Will be removed in future version.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.EmailZipPassword">
            <summary>
            This property is obsolete. Use ZipPassword instead. Will be removed in future version.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.ZipResult">
            <summary>
            If true, the result file will be compressed in a zip file
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.ZipPassword">
            <summary>
            If not empty, the Zip result file will be protected with the password
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.UserName">
            <summary>
            If not empty, the output is generated with a security context having the name specified
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.UserGroups">
            <summary>
            If not empty, the output is generated with a security context having the groups specified. One group name per line or separated by semi-column.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.UserCulture">
            <summary>
            The culture used to generate the report. If empty, the culture from the groups is used, then the default culture.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.PublicExec">
            <summary>
            For the Web Report Server: If true, the output can be executed by all users having the execute right on the report. If false, only the user owner can execute the schedule.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.PublicEdit">
            <summary>
            For the Web Report Server Designer: If true, the output and shedule can be edited by all users having the schedule right on the report. If false, only the user owner can edit the schedule.
            </summary>
        </member>
        <member name="F:Seal.Model.ReportOutput.Tag">
            <summary>
            Object that can be used at run-time for any purpose
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.Format">
            <summary>
            Format of the output
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.Device">
            <summary>
            Current OutputDevice
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.View">
            <summary>
            Current View to execute
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.UseCustomRestrictions">
            <summary>
            If true, custom restrictions can be defined for this output
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.Restrictions">
            <summary>
            Custom restrictions applied to this output
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.Information">
            <summary>
            Last information message
            </summary>
        </member>
        <member name="P:Seal.Model.ReportOutput.Error">
            <summary>
            Last error message
            </summary>
        </member>
        <member name="M:Seal.Model.ReportOutput.BeforeSerialization">
            <summary>
            Function called before the serialization
            </summary>
        </member>
        <member name="M:Seal.Model.ReportOutput.CopyParameters(System.Collections.Generic.List{Seal.Model.Parameter})">
            <summary>
            Copy the current parameter values to a parameter list
            </summary>
        </member>
        <member name="M:Seal.Model.ReportOutput.AfterSerialization">
            <summary>
            Function called after the serialization
            </summary>
        </member>
        <member name="T:Seal.Model.OutputDevice">
            <summary>
            Abstract Class to implement an OutputDevice
            </summary>
        </member>
        <member name="P:Seal.Model.OutputDevice.FullName">
            <summary>
            Full name
            </summary>
        </member>
        <member name="M:Seal.Model.OutputDevice.Process(Seal.Model.Report)">
            <summary>
            Process the report and send it to the device
            </summary>
        </member>
        <member name="M:Seal.Model.OutputDevice.Validate">
            <summary>
            Validate the device
            </summary>
        </member>
        <member name="F:Seal.Model.OutputDevice.FilePath">
            <summary>
            Current file path
            </summary>
        </member>
        <member name="M:Seal.Model.OutputDevice.SaveToFile">
            <summary>
            Save to current file
            </summary>
        </member>
        <member name="M:Seal.Model.OutputDevice.SaveToFile(System.String)">
            <summary>
            Save the device to a file
            </summary>
        </member>
        <member name="M:Seal.Model.OutputDevice.HandleZipOptions(Seal.Model.Report)">
            <summary>
            Handle the Output ZIP Options: Create a zip file if necessary
            </summary>
            <param name="report"></param>
        </member>
        <member name="T:Seal.Model.ReportViewPartialTemplate">
            <summary>
            A ReportViewPartialTemplate is a partial template of a report view template.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportViewPartialTemplate.UseCustom">
            <summary>
            If true, the partial template text for can be modified
            </summary>
        </member>
        <member name="P:Seal.Model.ReportViewPartialTemplate.Text">
            <summary>
            The custom template text used instead of the template defined by the partial template
            </summary>
        </member>
        <member name="F:Seal.Model.ReportViewPartialTemplate.LastTemplateModification">
            <summary>
            Last modification date time
            </summary>
        </member>
        <member name="F:Seal.Model.ReportViewPartialTemplate.View">
            <summary>
            Current view
            </summary>
        </member>
        <member name="T:Seal.Model.RepositoryServer">
            <summary>
            The RepositoryServer is used to maintain a static list of ReportViewTemplate for performances purpose
            </summary>
        </member>
        <member name="P:Seal.Model.RepositoryServer.ViewTemplates">
            <summary>
            Current list of ReportViewTemplate
            </summary>
        </member>
        <member name="M:Seal.Model.RepositoryServer.GetViewTemplate(System.String)">
            <summary>
            Returns a ReportViewTemplate from a given name
            </summary>
        </member>
        <member name="P:Seal.Model.RepositoryServer.TableTemplates">
            <summary>
            Current list of MetaTableTemplate
            </summary>
        </member>
        <member name="T:Seal.Model.RepositoryTranslation">
            <summary>
            A RepositoryTranslation defines a translation got from the repository
            </summary>
        </member>
        <member name="F:Seal.Model.RepositoryTranslation.Context">
            <summary>
            The context of the translation
            </summary>
        </member>
        <member name="F:Seal.Model.RepositoryTranslation.Instance">
            <summary>
            The instance of the translation
            </summary>
        </member>
        <member name="F:Seal.Model.RepositoryTranslation.Reference">
            <summary>
            The reference text
            </summary>
        </member>
        <member name="F:Seal.Model.RepositoryTranslation.Translations">
            <summary>
            List of translation texts per language
            </summary>
        </member>
        <member name="F:Seal.Model.RepositoryTranslation.Usage">
            <summary>
            Usgae counter for debug purpose
            </summary>
        </member>
        <member name="M:Seal.Model.RepositoryTranslation.InitFromCSV(System.Collections.Generic.Dictionary{System.String,Seal.Model.RepositoryTranslation},System.String,System.Boolean)">
            <summary>
            Init the list of RepositoryTranslation from the CSV file
            </summary>
        </member>
        <member name="T:Seal.Model.ReportViewTemplate">
            <summary>
            A ReportViewTemplate defines how a view is parsed and rendered.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportViewTemplate.Name">
            <summary>
            Name of the view template
            </summary>
        </member>
        <member name="P:Seal.Model.ReportViewTemplate.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:Seal.Model.ReportViewTemplate.FilePath">
            <summary>
            Current file path of the template
            </summary>
        </member>
        <member name="P:Seal.Model.ReportViewTemplate.ConfigurationPath">
            <summary>
            Path of the configuration file for the template
            </summary>
        </member>
        <member name="P:Seal.Model.ReportViewTemplate.Parameters">
            <summary>
            Parameters defined for the template 
            </summary>
        </member>
        <member name="P:Seal.Model.ReportViewTemplate.ParentNames">
            <summary>
            Allowed parent template names
            </summary>
        </member>
        <member name="P:Seal.Model.ReportViewTemplate.ForReportModel">
            <summary>
            True if the template is for a report model view
            </summary>
        </member>
        <member name="P:Seal.Model.ReportViewTemplate.IsModelViewChild">
            <summary>
            True if the template must have a Model View parent 
            </summary>
        </member>
        <member name="P:Seal.Model.ReportViewTemplate.IsRestrictionsView">
            <summary>
            True if the template is for a restrictions view
            </summary>
        </member>
        <member name="P:Seal.Model.ReportViewTemplate.IsWidgetView">
            <summary>
            True if the template is for a widget view
            </summary>
        </member>
        <member name="F:Seal.Model.ReportViewTemplate.SharedPartialTemplates">
            <summary>
            Additional partial templates to add to the template: Name of the partial template 
            </summary>
        </member>
        <member name="P:Seal.Model.ReportViewTemplate.Text">
            <summary>
            Text of the template
            </summary>
        </member>
        <member name="F:Seal.Model.ReportViewTemplate.Configuration">
            <summary>
            Current template configuration text
            </summary>
        </member>
        <member name="P:Seal.Model.ReportViewTemplate.Error">
            <summary>
            Current errors
            </summary>
        </member>
        <member name="P:Seal.Model.ReportViewTemplate.PartialTemplatesPath">
            <summary>
            List of partial templates path
            </summary>
        </member>
        <member name="M:Seal.Model.ReportViewTemplate.GetPartialTemplatePath(System.String)">
            <summary>
            Returns a partial template path from a given name
            </summary>
        </member>
        <member name="M:Seal.Model.ReportViewTemplate.GetPartialTemplateText(System.String)">
            <summary>
            Returns a partial template text from a given name
            </summary>
        </member>
        <member name="M:Seal.Model.ReportViewTemplate.Init(System.String)">
            <summary>
            Initialize the template from a file
            </summary>
        </member>
        <member name="M:Seal.Model.ReportViewTemplate.LoadTemplates(System.String)">
            <summary>
            Returns a list of ReportViewTemplate from a given folder
            </summary>
        </member>
        <member name="M:Seal.Model.ReportViewTemplate.ClearConfiguration">
            <summary>
            Clear the template configuration
            </summary>
        </member>
        <member name="F:Seal.Model.ReportViewTemplate.IsParsed">
            <summary>
            Flag for optimization, by default the template is not parsed... until it is used
            </summary>
        </member>
        <member name="F:Seal.Model.ReportViewTemplate.LastModification">
            <summary>
            Last modification date time
            </summary>
        </member>
        <member name="F:Seal.Model.ReportViewTemplate.LastConfigModification">
            <summary>
            Last modfication of the configuration file
            </summary>
        </member>
        <member name="P:Seal.Model.ReportViewTemplate.IsModified">
            <summary>
            True if the template or its configuration is modified
            </summary>
        </member>
        <member name="P:Seal.Model.ReportViewTemplate.CompilationKey">
            <summary>
            Compilation key for the template
            </summary>
        </member>
        <member name="M:Seal.Model.ReportViewTemplate.ParseConfiguration">
            <summary>
            Parse the current configuration and initialize the parameters
            </summary>
        </member>
        <member name="T:Seal.Model.Parameter">
            <summary>
            Parameters are used to configure report templates, outputs and repository security
            </summary>
        </member>
        <member name="P:Seal.Model.Parameter.Type">
            <summary>
            Parameter type
            </summary>
        </member>
        <member name="P:Seal.Model.Parameter.UseOnlyEnumValues">
            <summary>
            If true and the parameter is an enum, only the enum values defined can be selected
            </summary>
        </member>
        <member name="P:Seal.Model.Parameter.DisplayName">
            <summary>
            The parameter display name
            </summary>
        </member>
        <member name="P:Seal.Model.Parameter.Description">
            <summary>
            The parameter description
            </summary>
        </member>
        <member name="P:Seal.Model.Parameter.Value">
            <summary>
            The parameter value
            </summary>
        </member>
        <member name="P:Seal.Model.Parameter.EditorLanguage">
            <summary>
            
            </summary>
        </member>
        <member name="P:Seal.Model.Parameter.TextSamples">
            <summary>
            
            </summary>
        </member>
        <member name="P:Seal.Model.Parameter.BoolValue">
            <summary>
            The boolean parameter value
            </summary>
        </member>
        <member name="P:Seal.Model.Parameter.NumericValue">
            <summary>
            The numeric parameter value
            </summary>
        </member>
        <member name="P:Seal.Model.Parameter.TextValue">
            <summary>
            The text parameter value
            </summary>
        </member>
        <member name="P:Seal.Model.Parameter.Enums">
            <summary>
            List of string values if the parameter is an enum. Each enum can have an id and an optional display. 
            </summary>
        </member>
        <member name="P:Seal.Model.Parameter.EnumValues">
            <summary>
            List of enum values if the parameter is an enum
            </summary>
        </member>
        <member name="P:Seal.Model.Parameter.EnumDisplays">
            <summary>
            List of enum display values if the parameter is an enum
            </summary>
        </member>
        <member name="P:Seal.Model.Parameter.EnumValue">
            <summary>
            The enum parameter value
            </summary>
        </member>
        <member name="F:Seal.Model.Parameter.ConfigValue">
            <summary>
            String to store the default configuration value
            </summary>
        </member>
        <member name="P:Seal.Model.Parameter.ConfigObject">
            <summary>
            Default configuration value
            </summary>
        </member>
        <member name="P:Seal.Model.Parameter.HelperResetParameterValue">
            <summary>
            Editor Helper: Reset parameter to its default value
            </summary>
        </member>
        <member name="M:Seal.Model.Parameter.EnumGetDisplayFromValue(System.String)">
            <summary>
            For an enum, returns the display text from the value
            </summary>
        </member>
        <member name="M:Seal.Model.Parameter.EnumGetValueFromDisplay(System.String)">
            <summary>
            For an enum, returns the value from the display text
            </summary>
        </member>
        <member name="M:Seal.Model.Parameter.InitFromConfiguration(Seal.Model.Parameter)">
            <summary>
            Init parameter values from a reference 
            </summary>
        </member>
        <member name="T:Seal.Model.OutputParameter">
            <summary>
            OutputParameter are Parameter used for report output
            </summary>
        </member>
        <member name="P:Seal.Model.OutputParameter.CustomValue">
            <summary>
            If true, a custom parameter value is used when the report is executed for the output
            </summary>
        </member>
        <member name="T:Seal.Model.SecurityParameter">
            <summary>
            SecurityParameter are Parameters used to define the security
            </summary>
        </member>
        <member name="T:Seal.Model.RootEditor">
            <summary>
            Editor component to edit the properties in PropertyGrid
            </summary>
        </member>
        <member name="M:Seal.Model.RootEditor.InitEditor">
            <summary>
            Init the editor objects and the default values
            </summary>
        </member>
        <member name="M:Seal.Model.RootEditor.Init">
            <summary>
            Init the editor objects
            </summary>
        </member>
        <member name="M:Seal.Model.RootEditor.InitDefaultValues">
            <summary>
            Init the default values
            </summary>
        </member>
        <member name="M:Seal.Model.RootEditor.SetReadOnly">
            <summary>
            Set all properties to readonly
            </summary>
        </member>
        <member name="P:Seal.Model.RootEditor.Properties">
            <summary>
            List of properties of the object
            </summary>
        </member>
        <member name="M:Seal.Model.RootEditor.GetProperty(System.String)">
            <summary>
            Get a property descriptor from a property name
            </summary>
        </member>
        <member name="M:Seal.Model.RootEditor.UpdateEditorAttributes">
            <summary>
            Refresh properties attrivutes
            </summary>
        </member>
        <member name="M:Seal.Model.RootEditor.UpdateEditor">
            <summary>
            Update editor attributes
            </summary>
        </member>
        <member name="T:Seal.Model.SealInterface">
            <summary>
            Virtual class for SealInterface implementation
            </summary>
        </member>
        <member name="T:Seal.Model.SealExcelConverter">
            <summary>
            Base class for the Excel Converter
            </summary>
        </member>
        <member name="F:Seal.Model.SealExcelConverter.SourceFormat">
            <summary>
            Optional source format
            </summary>
        </member>
        <member name="M:Seal.Model.SealExcelConverter.Create">
            <summary>
            Creates a basic SealExcelConverter
            </summary>
        </member>
        <member name="M:Seal.Model.SealExcelConverter.ToString">
            <summary>
            Not implemented
            </summary>
        </member>
        <member name="M:Seal.Model.SealExcelConverter.ConvertToExcel(System.String)">
            <summary>
            Convert to Excel and save the result to a destination path
            </summary>
        </member>
        <member name="M:Seal.Model.SealExcelConverter.ShouldSerialize">
            <summary>
            True if the configuration should be serialized
            </summary>
        </member>
        <member name="T:Seal.Model.SealPdfConverter">
            <summary>
            Base class for the Pdf Converter
            </summary>
        </member>
        <member name="M:Seal.Model.SealPdfConverter.ShouldSerialize">
            <summary>
            True if the configuration should be serialized
            </summary>
        </member>
        <member name="T:Seal.Model.SealSecurity">
            <summary>
            SealSecurity defines all the repository security
            </summary>
        </member>
        <member name="F:Seal.Model.SealSecurity.FilePath">
            <summary>
            Current file path
            </summary>
        </member>
        <member name="F:Seal.Model.SealSecurity.Repository">
            <summary>
            Current repository
            </summary>
        </member>
        <member name="P:Seal.Model.SealSecurity.ProviderName">
            <summary>
            The security provider used for the authentication
            </summary>
        </member>
        <member name="P:Seal.Model.SealSecurity.ProviderScript">
            <summary>
            The script executed to login and find the security group used to published reports
            </summary>
        </member>
        <member name="P:Seal.Model.SealSecurity.UseCustomScript">
            <summary>
            If true, a custom script can be used for the authentication process
            </summary>
        </member>
        <member name="P:Seal.Model.SealSecurity.Script">
            <summary>
            The script executed to login and find the security group used to published reports. If the script is empty, the publication is done using the first security group defined.
            </summary>
        </member>
        <member name="P:Seal.Model.SealSecurity.Provider">
            <summary>
            Current SecurityProvider
            </summary>
        </member>
        <member name="P:Seal.Model.SealSecurity.Providers">
            <summary>
            List of SecurityProviders available in the repository
            </summary>
        </member>
        <member name="P:Seal.Model.SealSecurity.Parameters">
            <summary>
            List of SecurityParameter used by the provider
            </summary>
        </member>
        <member name="P:Seal.Model.SealSecurity.CurrentParameters">
            <summary>
            Parameter values used in the script
            </summary>
        </member>
        <member name="P:Seal.Model.SealSecurity.Groups">
            <summary>
            The groups defines how are published folders and reports in the Web Report Server. At least one group must exist.
            </summary>
        </member>
        <member name="M:Seal.Model.SealSecurity.FindSecurityFolder(System.Collections.Generic.List{Seal.Model.SecurityGroup},System.String)">
            <summary>
            Returns a SecurityFolder from a given name
            </summary>
        </member>
        <member name="F:Seal.Model.SealSecurity.LastModification">
            <summary>
            Last modification date time
            </summary>
        </member>
        <member name="M:Seal.Model.SealSecurity.LoadFromFile(System.String,System.Boolean)">
            <summary>
            Load a SealSecurity from a file
            </summary>
        </member>
        <member name="M:Seal.Model.SealSecurity.SaveToFile">
            <summary>
            Save to the current file
            </summary>
        </member>
        <member name="M:Seal.Model.SealSecurity.SaveToFile(System.String)">
            <summary>
            Save to a destination file path
            </summary>
            <param name="path"></param>
        </member>
        <member name="P:Seal.Model.SealSecurity.Error">
            <summary>
            Last error message
            </summary>
        </member>
        <member name="P:Seal.Model.SealSecurity.TestUserName">
            <summary>
            Editor Helper: User name to test a login
            </summary>
        </member>
        <member name="P:Seal.Model.SealSecurity.TestPassword">
            <summary>
            Editor Helper: Password to test a login
            </summary>
        </member>
        <member name="P:Seal.Model.SealSecurity.TestCurrentWindowsUser">
            <summary>
            Editor Helper: If true, the current user will be use as IPrincipal to test the Integrated Windows authentication
            </summary>
        </member>
        <member name="P:Seal.Model.SealSecurity.HelperSimulateLogin">
            <summary>
            Editor Helper: Test a login using the test user name and password or the current windows user
            </summary>
        </member>
        <member name="M:Seal.Model.SealSecurity.HasValue(System.String)">
            <summary>
            True if a parameter with a given name has a value
            </summary>
        </member>
        <member name="M:Seal.Model.SealSecurity.GetValue(System.String)">
            <summary>
            Parameter value of a given name
            </summary>
        </member>
        <member name="M:Seal.Model.SealSecurity.GetBoolValue(System.String)">
            <summary>
            Parameter boolean value of a given name
            </summary>
        </member>
        <member name="M:Seal.Model.SealSecurity.GetNumericValue(System.String)">
            <summary>
            Parameter numeric value of a given name
            </summary>
        </member>
        <member name="F:Seal.Model.SealSecurity.LoggedUsers">
            <summary>
            List of logged users
            </summary>
        </member>
        <member name="M:Seal.Model.SealSecurity.AddLoggedUsed(Seal.Model.SecurityUser)">
            <summary>
            Add a logged user
            </summary>
        </member>
        <member name="M:Seal.Model.SealSecurity.RemoveLoggedUsed(Seal.Model.SecurityUser)">
            <summary>
            Remove a logged user
            </summary>
        </member>
        <member name="T:Seal.Model.CommonScript">
            <summary>
            Common script that are added at the end of all scripts executed
            </summary>
        </member>
        <member name="F:Seal.Model.CommonScript.RazorTemplate">
            <summary>
            Sample
            </summary>
        </member>
        <member name="P:Seal.Model.CommonScript.Name">
            <summary>
            The script name
            </summary>
        </member>
        <member name="P:Seal.Model.CommonScript.Script">
            <summary>
            A Razor script that will be included in all executed scripts
            </summary>
        </member>
        <member name="T:Seal.Model.RecentFileItem">
            <summary>
            Store recent file for the user's profile
            </summary>
        </member>
        <member name="P:Seal.Model.RecentFileItem.Path">
            <summary>
            Relative path of the report
            </summary>
        </member>
        <member name="P:Seal.Model.RecentFileItem.ViewGUID">
            <summary>
            View GUID for the execution
            </summary>
        </member>
        <member name="P:Seal.Model.RecentFileItem.OutputGUID">
            <summary>
            Output GUID for the execution
            </summary>
        </member>
        <member name="P:Seal.Model.RecentFileItem.Name">
            <summary>
            Report name
            </summary>
        </member>
        <member name="T:Seal.Model.SecurityUserProfile">
            <summary>
            Object to store the culture and the recent reports of the user
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUserProfile.Culture">
            <summary>
            Culture of the user
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUserProfile.OnStartup">
            <summary>
            Action to take after the user logs in
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUserProfile.StartUpReport">
            <summary>
            Relative report path to execute when the user logs in if OnStartup = 'Execute a specific report'
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUserProfile.StartupReportName">
            <summary>
            Name of report to execute when the user logs in if OnStartup = 'Execute a specific report'
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUserProfile.LastFolder">
            <summary>
            Last folder of the user
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUserProfile.RecentReports">
            <summary>
            List of recent reports
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUserProfile.LoadFromFile(System.String)">
            <summary>
            Load the profile from a file path
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUserProfile.SaveToFile">
            <summary>
            Save to current file
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUserProfile.SaveToFile(System.String)">
            <summary>
            Save to a file path
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUserProfile.Path">
            <summary>
            Current file path
            </summary>
        </member>
        <member name="T:Seal.Model.SecuritySource">
            <summary>
            A SecuritySource defines the security applied to a data source for the Web Report Designer
            </summary>
        </member>
        <member name="P:Seal.Model.SecuritySource.Name">
            <summary>
            The name of the data source
            </summary>
        </member>
        <member name="P:Seal.Model.SecuritySource.Right">
            <summary>
            The right applied for the data source having this name
            </summary>
        </member>
        <member name="P:Seal.Model.SecuritySource.DisplayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="T:Seal.Model.SecurityDevice">
            <summary>
            A SecurityDevice defines the security applied to a device for the Web Report Designer
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityDevice.Name">
            <summary>
            The name of the device
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityDevice.Right">
            <summary>
            The right applied for the device having this name
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityDevice.DisplayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="T:Seal.Model.SecurityConnection">
            <summary>
            A SecurityConnection defines the security applied to a connection for the Web Report Designer
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityConnection.Source">
            <summary>
            The name of the data source containing the connection (optional)
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityConnection.Name">
            <summary>
            The name of the connection
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityConnection.Right">
            <summary>
            /The right applied for the connection having this name
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityConnection.DisplayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="T:Seal.Model.SecurityColumn">
            <summary>
            A SecurityColumn defines the security applied to a column for the Web Report Designer
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityColumn.Source">
            <summary>
            The name of the data source containing the column (optional)
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityColumn.Tag">
            <summary>
            The name of the security tag (must match with the tags defined in the columns)
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityColumn.Category">
            <summary>
            The name of the category (must match with categories defined in the columns)
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityColumn.Right">
            <summary>
            The right applied for the columns having this security tag or this category
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityColumn.DisplayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="T:Seal.Model.SecurityProvider">
            <summary>
            The SecurityProvider defines how the login is done and the security groups are added to the user
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityProvider.Name">
            <summary>
            Name 
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityProvider.FilePath">
            <summary>
            Current file path
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityProvider.Script">
            <summary>
            Razor script used to perform the login
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityProvider.PromptUserPassword">
            <summary>
            Property not used anymore
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityProvider.Parameters">
            <summary>
            List of SecurityParameter
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityProvider.Configuration">
            <summary>
            Current Configuration
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityProvider.Error">
            <summary>
            Current error
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityProvider.LoadProviders(System.String)">
            <summary>
            List of available SecurityProvider
            </summary>
        </member>
        <member name="T:Seal.Model.SecurityFolder">
            <summary>
            A SecurityFolder defines the security applied to a published folder
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityFolder.Path">
            <summary>
            The folder path containing the reports to publish. The path is relative to the repository 'Reports' folder and should be unique in the security group.
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityFolder.UseSubFolders">
            <summary>
            If true, sub-folders are also published with the same definition
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityFolder.ManageFolder">
            <summary>
            If true, the user can Create, Rename or Delete sub-folders in this folder. This flag is only used if Sub-folders are shown.
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityFolder.FolderRight">
            <summary>
            The right applied on the reports and files of the folder
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityFolder.ExpandSubFolders">
            <summary>
            If true, all the Sub-folders displayed in the Tree View are expanded by default
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityFolder.FilesOnly">
            <summary>
            If true, only files can be viewed or managed in the folder (reports are not shown and can not be created)
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityFolder.IsDefined">
            <summary>
            Helper: is true if defined in a group 
            </summary>
        </member>
        <member name="T:Seal.Model.SecurityGroup">
            <summary>
            A SecurityGroup defines all the security applied to a user belonging to the group
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.Name">
            <summary>
            The security group name
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.Folders">
            <summary>
            The folder configurations for this group used for Web Publication of reports. By default, repository folders have no right.
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.PersFolderRight">
            <summary>
            Define the right of the dedicated personal folder for each user of the group
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.ShowFoldersView">
            <summary>
            If true, the folders view of the reports is shown
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.ShowAllFolders">
            <summary>
            If true, parent folder with no rights are also shown in the tree view
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.FoldersScript">
            <summary>
            Optional script executed to define/modify the folders published in the Web Report Server. If the user belongs to several groups, scripts are executed sequentially sorted by group name.
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.FolderDetailScript">
            <summary>
            Optional script executed to define/modify the reports published in the Web Report Server for a given folder. If the user belongs to several groups, scripts are executed sequentially sorted by group name.
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.MenuScript">
            <summary>
            Optional script executed to define/modify the reports menu of the Web Report Server. If the user belongs to several groups, scripts are executed sequentially sorted by group name.
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.SqlModel">
            <summary>
            For the Web Report Designer: If true, SQL Models and Custom SQL for elements or restrictions can be edited through the Web Report Designer.
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.Devices">
            <summary>
            For the Web Report Designer: Device rights for the group. Set rights to devices through their names. By default, all devices can be selected.
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.Sources">
            <summary>
            For the Web Report Designer: Data sources rights for the group. Set rights to data source through their names. By default, all sources can be selected.
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.Connections">
            <summary>
            For the Web Report Designer: Connections rights for the group. Set rights to connections through their names. By default, all connections can be selected.
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.Columns">
            <summary>
            For the Web Report Designer: Columns rights for the group. Set rights to columns through the security tags or categories assigned. By default, all columns can be selected.
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.Weight">
            <summary>
            Weight to select the default group when a user belongs to several groups. The options of the group having the highest weight are applied to the user.
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.EditProfile">
            <summary>
            Priority to select the default group when a user belongs to several groups. The options of the group having the highest priority (minimum value) are applied to the user.
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.Culture">
            <summary>
            The culture used for users belonging to the group. If empty, the default culture is used.
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.LogoName">
            <summary>
            The logo file name used for to generate the reports. If empty, the default logo is used.
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.CSVExportName">
            <summary>
            The CSV Export file name used for to generate the reports. If empty, the default logo is used.
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.OnStartup">
            <summary>
            The action to take after the user logs in.
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityGroup.StartupReport">
            <summary>
            If the startup option is 'Execute a specific report', the relative report path to execute when the user logs in (e.g. '/Samples/04-Charts Gallery - Basics.srex').
            </summary>
        </member>
        <member name="T:Seal.Model.SecurityUser">
            <summary>
            A SecurityUser defines a logged user with all security objects
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.Name">
            <summary>
            Name of the user
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.PersonalFolderName">
            <summary>
            Personal folder name
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.SecurityGroups">
            <summary>
            List of SecurityGroup of the users
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.Security">
            <summary>
            Current SealSecurity
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.Error">
            <summary>
            Last error
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.Warning">
            <summary>
            Last warning
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.Folders">
            <summary>
            Current list of SWIFolder of the user
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUser.AllFolders">
            <summary>
            Flat list of all SWIFolder of the user 
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.FolderDetail">
            <summary>
            Current folder detail of the user
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.ScriptNumber">
            <summary>
            Current script execution number when several Folders or Folder Detail scripts are executed.
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.FolderDetails">
            <summary>
            List of all SWIFolderDetail of the user. The list is built when the user browse the folders.
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.WebMenu">
            <summary>
            Current reports web menu of the user (used for Folder Detail Scripts)
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.Profile">
            <summary>
            Current SecurityUserProfile
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.Tag">
            <summary>
            Custom string got in user profile
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.WebUserName">
            <summary>
            Parameters for authentication: User name 
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.WebPassword">
            <summary>
            Parameters for authentication: Password
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.SessionID">
            <summary>
            Current SessionID
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.Token">
            <summary>
            Parameters for authentication: Token
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.Request">
            <summary>
            Parameters for authentication: The Request done for the login
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.WebPrincipal">
            <summary>
            The current Windows IPrincipal
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.Identity">
            <summary>
            The current Windows Identity
            </summary>
        </member>
        <member name="F:Seal.Model.SecurityUser.UserPrincipal">
            <summary>
            The current UserPrincipal if connected with the AD
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUser.IsAuthenticated">
            <summary>
            True if the user is authenticated and part of a group
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUser.#ctor(Seal.Model.SealSecurity)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUser.SaveProfile">
            <summary>
            Save the user profile
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUser.PersonalFolderRight">
            <summary>
            Right for the personal folder
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUser.SqlModel">
            <summary>
            True if the user has right to edit SQL models
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUser.ShowFoldersView">
            <summary>
            If true, folders view is shown
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUser.ShowAllFolders">
            <summary>
            True if folders with no right are also shown
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUser.Authenticate">
            <summary>
            Authenticate the user using the current security script
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUser.Logout">
            <summary>
            Logout the user
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUser.DefaultGroup">
            <summary>
            Default group of the user
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUser.FindSecurityFolder(System.String)">
            <summary>
            Find a security folder from a given name
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUser.ForbiddenColumns">
            <summary>
            List of columns that cannot be edited with the Web Report Designer
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUser.CanSelectColumn(Seal.Model.MetaColumn)">
            <summary>
            True if the column can be selected 
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUser.ForbiddenSources">
            <summary>
            List of data source that cannot be edited with the Web Report Designer
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUser.CanSelectSource(Seal.Model.MetaSource)">
            <summary>
            True if the data source can be selected 
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUser.ForbiddenDevices">
            <summary>
            List of devices that cannot be edited with the Web Report Designer
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUser.CanSelectDevice(Seal.Model.OutputDevice)">
            <summary>
            True if the device can be selected 
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUser.ForbiddenConnections">
            <summary>
            List of connections that cannot be edited with the Web Report Designer
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUser.CanSelectConnection(Seal.Model.MetaConnection)">
            <summary>
            True if the connection can be selected 
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUser.AddDefaultSecurityGroup">
            <summary>
            Add default security groups
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUser.AddSecurityGroup(System.String)">
            <summary>
            Add a security group from a given name
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUser.AddWindowsGroupToSecurityGroup(System.Boolean,System.String)">
            <summary>
            Add security groups from the current Windows group of the logged user
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUser.AuthenticationSummary">
            <summary>
            Summary of the authentication
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUser.SecurityGroupsDisplay">
            <summary>
            List of security group names in a string
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUser.BelongsToGroup(System.String)">
            <summary>
            Returns true if the user belongs to a group given by a name
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUser.GetPersonalFolderName">
            <summary>
            Returns the personal folder name
            </summary>
        </member>
        <member name="P:Seal.Model.SecurityUser.ProfilePath">
            <summary>
            Profile file path
            </summary>
        </member>
        <member name="M:Seal.Model.SecurityUser.GetMenuReportViews">
            <summary>
            List reports menu
            </summary>
        </member>
        <member name="T:Seal.Model.SealServerConfiguration">
            <summary>
            Main configuration of the Seal Server
            </summary>
        </member>
        <member name="F:Seal.Model.SealServerConfiguration.FilePath">
            <summary>
            Current file path
            </summary>
        </member>
        <member name="F:Seal.Model.SealServerConfiguration.Repository">
            <summary>
            Current repository
            </summary>
        </member>
        <member name="F:Seal.Model.SealServerConfiguration.ForPublication">
            <summary>
            True if the configuration is used for Web Site publication on IIS
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.LogoName">
            <summary>
            The logo file name used by the report templates
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.HasLogo">
            <summary>
            True if a logo is defined and exists
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.LogDays">
            <summary>
            Number of days of log files to keep in the repository 'Logs' subfolder. If 0, the log feature is disabled.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.WebProductName">
            <summary>
            The name of the product displayed on the Web site
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.WebCultures">
            <summary>
            List of cultures available in the user profile of the Web Report Server. If nothing is selected, the translation cultures installed in the repository are proposed by default.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.IsLocal">
            <summary>
            If true, the programs will not access to Internet for external resources. All JavaScript's will be loaded locally (no use of CDN path).
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.FileReplacePatterns">
            <summary>
            List of strings to replace when the report result is generated in a single HTML file (case of View Report Result or Output generation). This allow to specify the new font location in a CSS.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.CssFiles">
            <summary>
            Additional CSS files to be included in the HTML report result. One per line or separated by semi-column.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.ScriptFiles">
            <summary>
            Additional JavaScript files to be included in the HTML report result. One per line or separated by semi-column.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.UseSealScheduler">
            <summary>
            If true, the Web Report Server Scheduler is used instead of the Windows Task Scheduler. The schedules are stored in the 'SpecialFolders\\Schedules' repository folder (one file per schedule). This allows schedules for .NETCore or Azure installations.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.TaskFolderName">
            <summary>
            Name of the Task Scheduler folder containg the schedules of the reports if the Windows Task Scheduler is used
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.AuditEnabled">
            <summary>
            If true, the Audit script is executed for the follwing events: login, logout, report execution and management, folder management, file management.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.AuditScript">
            <summary>
            If set, the script is executed to log events. The default implementation is to insert a record into a database table.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.InitScript">
            <summary>
            If set, the script is executed when a report is initialized for an execution. Default values for report execution can be set here.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.ReportCreationScript">
            <summary>
            If set, the script is executed when a new report is created. Default values for report creation can be set here.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.CommonScripts">
            <summary>
            List of scripts added to all scripts executed during a report execution (including tasks). This may be useful to defined common functions for the reports. To include the script, an @Include("common script name") directive must be inserted at the beginning of the script.
            </summary>
        </member>
        <member name="M:Seal.Model.SealServerConfiguration.SetConfigurationCommonScripts(System.String)">
            <summary>
            Replace the @Include by the common script in the current script
            </summary>
        </member>
        <member name="M:Seal.Model.SealServerConfiguration.GetConfigurationCommonScriptKey(System.String,System.Object)">
            <summary>
            Returns a common script key form a given name and model
            </summary>      
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.PdfUseClient">
            <summary>
            If true, the client library is used to perform the HTML to PDF conversion (mainly useful for .NETCore distribution). This requires the installation of the HTML to PDF Server on a Windows machine or on Azur Services.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.PdfServer">
            <summary>
            If the client library is used, the HTML to PDF server IP or name.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.PdfServerPort">
            <summary>
            If the client library is used, the HTML to PDF server IP or name.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.PdfServicePassword">
            <summary>
            If the client library is used, optional HTML to PDF converter service password.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.PdfUseWebService">
            <summary>
            If true, the client library will call the Web service instead of the TCP service to perform the HTML to PDF conversion.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.PdfWebServiceURL">
            <summary>
            If the client library is used, the HTML to PDF web service URL.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.PdfConfigurations">
            <summary>
            Current default configuration values for Pdf converter
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.PdfConverter">
            <summary>
            Editor Helper: All the default options applied to the PDF conversion from the HTML result.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.PdfConverterEdited">
            <summary>
            True if the Pdf configurations were edited
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.HelperResetPDFConfigurations">
            <summary>
            Editor Helper: Reset PDF configuration values to their default values
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.ExcelConfigurations">
            <summary>
            Current default configuration values for Excel converter
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.ExcelConverter">
            <summary>
            Editor Helper: All the default options applied to the Excel conversion from the view
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.ExcelConverterEdited">
            <summary>
            True if the Excel configurations were edited
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.HelperResetExcelConfigurations">
            <summary>
            Editor Helper: Reset Excel configuration values to their default values
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.CommonScriptsHeader">
            <summary>
            All common scripts
            </summary>
        </member>
        <member name="M:Seal.Model.SealServerConfiguration.GetCommonScriptsHeader(Seal.Model.CommonScript)">
            <summary>
            Returns all common scripts not being edited
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.DefaultCulture">
            <summary>
            The name of the culture used when a report is created. If not specified, the current culture of the server is used.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.NumericFormat">
            <summary>
            The numeric format used for numeric column having the default format
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.DateTimeFormat">
            <summary>
            The date time format used for date time column having the default format
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.CsvSeparator">
            <summary>
            If not specified in the report, separator used for the CSV template
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.WebNETCore">
            <summary>
            If true, the Web site is published with the NET Core distribution.
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.WebApplicationName">
            <summary>
            The name of the IIS Web application. Use '/' to publish on 'Default Web Site'
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.WebApplicationPoolName">
            <summary>
            The name of the IIS Application pool used by the web application
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.WebPublicationDirectory">
            <summary>
            The directory were the web site files are published
            </summary>
        </member>
        <member name="P:Seal.Model.SealServerConfiguration.InstallationDirectory">
            <summary>
            Installation directory
            </summary>
        </member>
        <member name="F:Seal.Model.SealServerConfiguration.LastModification">
            <summary>
            Last modifcation date time
            </summary>
        </member>
        <member name="M:Seal.Model.SealServerConfiguration.LoadFromFile(System.String,System.Boolean)">
            <summary>
            Load configuration from a file
            </summary>
        </member>
        <member name="M:Seal.Model.SealServerConfiguration.SaveToFile">
            <summary>
            Save to current file
            </summary>
        </member>
        <member name="M:Seal.Model.SealServerConfiguration.SaveToFile(System.String)">
            <summary>
            Save to a given file path
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Seal.Model.SealServerConfiguration.GetAttachedFileContent(System.String)">
            <summary>
            Read the file content and replace the configuration keywords
            </summary>
        </member>
        <member name="T:Seal.Model.SealServerConfiguration.FileReplacePattern">
            <summary>
            Defines a pattern to replace in a file 
            </summary>
        </member>
        <member name="T:Seal.Model.SubReport">
            <summary>
            A SubReport defines a report executed from a column
            </summary>
        </member>
        <member name="P:Seal.Model.SubReport.Name">
            <summary>
            The name displayed in the report
            </summary>
        </member>
        <member name="P:Seal.Model.SubReport.Path">
            <summary>
            The report path
            </summary>
        </member>
        <member name="P:Seal.Model.SubReport.Restrictions">
            <summary>
            List of restriction identifier involved in the Sub-report
            </summary>
        </member>
        <member name="T:Seal.Model.MetaEV">
            <summary>
            A MetaEV defines a value of an enumerated list
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEV.Id">
            <summary>
            The database value of the enumerated value
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEV.Val">
            <summary>
            The optional display value
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEV.ConnectionGUID">
            <summary>
            If set, the enumerated value is only valid when the connection is used. If empty, the value is valid for all connections.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEV.ValR">
            <summary>
            The optional display value for the restriction list
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEV.Css">
            <summary>
            The optional CSS Style applied to the cell displayed
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEV.Class">
            <summary>
            The optional CSS Class applied to the cell displayed
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEV.DisplayValue">
            <summary>
            The final value displayed in the report
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEV.DisplayRestriction">
            <summary>
            The final value displayed for the restriction
            </summary>
        </member>
        <member name="F:Seal.Model.MetaEV.HtmlId">
            <summary>
            Id used for execution
            </summary>
        </member>
        <member name="F:Seal.Model.MetaEV.MetaEnum">
            <summary>
            Meta enum of the value. Used only for the editor.
            </summary>
        </member>
        <member name="T:Seal.Model.ReportSource">
            <summary>
            A ReportSource is a MetaSource dedicated for a report
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSource.MetaSourceGUID">
            <summary>
            Unique identifier of the source
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSource.MetaSourceName">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSource.RepositoryConnection">
            <summary>
            Reference to the default repository connection
            </summary>
        </member>
        <member name="P:Seal.Model.ReportSource.Connection">
            <summary>
            Current connection
            </summary>
        </member>
        <member name="M:Seal.Model.ReportSource.Create(Seal.Model.Repository,System.Boolean)">
            <summary>
            Creates a basic ReportSource
            </summary>
        </member>
        <member name="F:Seal.Model.ReportSource.Loaded">
            <summary>
            True if the source has been initialized from the repository
            </summary>
        </member>
        <member name="M:Seal.Model.ReportSource.LoadRepositoryMetaSources(Seal.Model.Repository)">
            <summary>
            Load the available MetaSources defined in the repository
            </summary>
        </member>
        <member name="M:Seal.Model.ReportSource.RefreshEnumsOnDbConnection">
            <summary>
            Refresh the enumerated list values
            </summary>
        </member>
        <member name="T:Seal.Model.MetaJoin">
            <summary>
            A MetaJoin defines how to join 2 MetaTables
            </summary>
        </member>
        <member name="M:Seal.Model.MetaJoin.Create">
            <summary>
            Basic creation
            </summary>
        </member>
        <member name="P:Seal.Model.MetaJoin.Name">
            <summary>
            Name of the join. If reset to an Empty String, the name is built using the table names.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaJoin.LeftTableGUID">
            <summary>
            Left table GUID for the join definition
            </summary>
        </member>
        <member name="P:Seal.Model.MetaJoin.LeftTable">
            <summary>
            Left table for the join definition
            </summary>
        </member>
        <member name="P:Seal.Model.MetaJoin.RightTableGUID">
            <summary>
            Right table GUID for the join definition
            </summary>
        </member>
        <member name="P:Seal.Model.MetaJoin.RightTable">
            <summary>
            Right table GUID for the join definition
            </summary>
        </member>
        <member name="P:Seal.Model.MetaJoin.Clause">
            <summary>
            SQL Clause or LINQ Clause (for No SQL Source) used to define the join between the 2 tables.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaJoin.JoinType">
            <summary>
            The type of join used to link the 2 tables
            </summary>
        </member>
        <member name="P:Seal.Model.MetaJoin.IsBiDirectional">
            <summary>
            Indicates if the join can also be used in the other direction (left-right or right-left)
            </summary>
        </member>
        <member name="P:Seal.Model.MetaJoin.SQLJoinType">
            <summary>
            SQL generated for the join type
            </summary>
        </member>
        <member name="M:Seal.Model.MetaJoin.CheckJoin">
            <summary>
            Helper to check the join
            </summary>
        </member>
        <member name="F:Seal.Model.MetaJoin.IsEditable">
            <summary>
            True if the join is editable
            </summary>
        </member>
        <member name="P:Seal.Model.MetaJoin.Source">
            <summary>
            Current MetaSource
            </summary>
        </member>
        <member name="P:Seal.Model.MetaJoin.HelperCheckJoin">
            <summary>
            Editor Helper: Check the join in the database
            </summary>
        </member>
        <member name="P:Seal.Model.MetaJoin.Information">
            <summary>
            Last information message
            </summary>
        </member>
        <member name="P:Seal.Model.MetaJoin.Error">
            <summary>
            Last error message
            </summary>
        </member>
        <member name="T:Seal.Model.MetaColumn">
            <summary>
            A MetaColumn is part of a MetaTable and defines an element that can be selected in a report
            </summary>
        </member>
        <member name="M:Seal.Model.MetaColumn.Create(System.String)">
            <summary>
            Create a basic column
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.Name">
            <summary>
            The name of the column in the table or the SQL Statement used for the column
            </summary>
        </member>
        <member name="F:Seal.Model.MetaColumn._type">
            <summary>
            Data type of the column
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.IsAggregate">
            <summary>
            Must be True if the column contains SQL aggregate functions like SUM,MIN,MAX,COUNT,AVG
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.Category">
            <summary>
            Category used to display the column in the Report Designer tree view. Category hierarchy can be defined using the '/' character (e.g. 'Master/Name1/Name2').
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.Tag">
            <summary>
            Tag used to define the security of the Web Report Designer (Columns of the Security Groups defined in the Web Security)
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.DisplayName">
            <summary>
            Name used to display the column in the Report Designer tree view and in the report results
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.DisplayOrder">
            <summary>
            The order number used to sort the column in the tree view (by table and by category)
            </summary>
        </member>
        <member name="M:Seal.Model.MetaColumn.GetSort">
            <summary>
            The display order
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.NumericStandardFormat">
            <summary>
            Standard display format applied to the element
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.DateTimeStandardFormat">
            <summary>
            Standard display format applied to the element
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.Format">
            <summary>
            If not empty, specify the format of the elements values displayed in the result tables (.Net Format Strings)
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.HasTime">
            <summary>
            True if the column is a DateTime displaying time
            </summary>
        </member>
        <member name="M:Seal.Model.MetaColumn.SetStandardFormat">
            <summary>
            Set standard format accroding to the type
            </summary>
        </member>
        <member name="M:Seal.Model.MetaColumn.SetDefaultFormat">
            <summary>
            Set default format defined in the repository configuration accroding to the type
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.EnumGUID">
            <summary>
            If defined, a list of values is proposed when the column is used for restrictions
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.Enum">
            <summary>
            Enumerated list if the column has an EnumGUID
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.Source">
            <summary>
            Current MetaSource
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.IsSQL">
            <summary>
            True if the source is a standard SQL source
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.MetaTable">
            <summary>
            Current MetaTable of the column
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.FullDisplayName">
            <summary>
            Full display name
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.DisplayName2">
            <summary>
            Display name used to sort the TreeView
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.ColumnName">
            <summary>
            Returns the SQL column name without prefix
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.RawLINQColumnName">
            <summary>
            LINQ Column name of the element
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.DrillChildren">
            <summary>
            Defines the child columns to navigate from this column with the drill feature
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.DrillUpOnlyIfDD">
            <summary>
            If true, Drill Up is activated only if a drill down occured
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.HelperCreateDrillDates">
            <summary>
            Editor Helper: Create automatically a 'Year' column and a 'Month' column to drill down to the date
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.SubReports">
            <summary>
            Defines sub-reports to navigate from this column
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.HelperCreateSubReport">
            <summary>
            Editor Helper: Create a Sub-Report to display the detail of this table
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.HelperAddSubReport">
            <summary>
            Editor Helper: Add an existing Sub-Report to this column
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.HelperOpenSubReportFolder">
            <summary>
            Editor Helper: Open the Sub-Report folder in Windows Explorer
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.HelperCheckColumn">
            <summary>
            Editor Helper: Check the column SQL statement in the database
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.HelperCreateEnum">
            <summary>
            Editor Helper:  Click to create an enumerated list from this table column
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.HelperShowValues">
            <summary>
            Editor Helper:  Show the first 1000 values of the column
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.Information">
            <summary>
            Last information message ther column has been checked
            </summary>
        </member>
        <member name="P:Seal.Model.MetaColumn.Error">
            <summary>
            Last error message
            </summary>
        </member>
        <member name="T:Seal.Model.MetaConnection">
            <summary>
            A MetaConnection defines a connection to a database
            </summary>
        </member>
        <member name="F:Seal.Model.MetaConnection.Source">
            <summary>
            Current MetaSource
            </summary>
        </member>
        <member name="M:Seal.Model.MetaConnection.Create(Seal.Model.MetaSource)">
            <summary>
            Create a basic connection into a source
            </summary>
        </member>
        <member name="P:Seal.Model.MetaConnection.Name">
            <summary>
            The name of the connection
            </summary>
        </member>
        <member name="P:Seal.Model.MetaConnection.DatabaseType">
            <summary>
            The type of the source database
            </summary>
        </member>
        <member name="P:Seal.Model.MetaConnection.ConnectionType">
            <summary>
            The type of the connection used
            </summary>
        </member>
        <member name="P:Seal.Model.MetaConnection.ConnectionString">
            <summary>
            OLE DB Connection string used to connect to the database if the connection type is OLE DB
            </summary>
        </member>
        <member name="P:Seal.Model.MetaConnection.ConnectionString2">
            <summary>
            Property Helper for editor
            </summary>
        </member>
        <member name="P:Seal.Model.MetaConnection.OdbcConnectionString">
            <summary>
            ODBC Connection string used to connect to the database if the connection type is ODBC
            </summary>
        </member>
        <member name="P:Seal.Model.MetaConnection.MSSqlServerConnectionString">
            <summary>
            MS SQLServer Connection string used to connect to the database if the connection type is MS SQLServer
            </summary>
        </member>
        <member name="P:Seal.Model.MetaConnection.DateTimeFormat">
            <summary>
            The date time format used to build date restrictions in the SQL WHERE clauses. This is not used for MS Access database (Serial Dates).
            </summary>
        </member>
        <member name="P:Seal.Model.MetaConnection.FullConnectionString">
            <summary>
            Full Connection String (Oledb, Odbc or MSSQLServer) with user name and password
            </summary>
        </member>
        <member name="P:Seal.Model.MetaConnection.UserName">
            <summary>
            User name used to connect to the database
            </summary>
        </member>
        <member name="P:Seal.Model.MetaConnection.Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="P:Seal.Model.MetaConnection.ClearPassword">
            <summary>
            Password in clear text
            </summary>
        </member>
        <member name="F:Seal.Model.MetaConnection.IsEditable">
            <summary>
            True if the connection is editable
            </summary>
        </member>
        <member name="F:Seal.Model.MetaConnection.DbConnectionResult">
            <summary>
            Result for the database connection script
            </summary>
        </member>
        <member name="M:Seal.Model.MetaConnection.GetOpenConnection">
            <summary>
            Returns an open DbConnection object
            </summary>
        </member>
        <member name="M:Seal.Model.MetaConnection.CheckConnection">
            <summary>
            Check the current connection
            </summary>
        </member>
        <member name="P:Seal.Model.MetaConnection.HelperCheckConnection">
            <summary>
            Editor Helper: Check the database connection
            </summary>
        </member>
        <member name="P:Seal.Model.MetaConnection.HelperCreateFromExcelAccess">
            <summary>
            Editor Helper: Helper to create a connection string to query an Excel workbook or a MS Access database
            </summary>
        </member>
        <member name="P:Seal.Model.MetaConnection.Information">
            <summary>
            Last information message when the enum list has been refreshed
            </summary>
        </member>
        <member name="P:Seal.Model.MetaConnection.Error">
            <summary>
            Last error message
            </summary>
        </member>
        <member name="T:Seal.Model.MetaData">
            <summary>
            A MetaData contains the list of MetaTable, MetaJoin and MetaEnum of a data source
            </summary>
        </member>
        <member name="P:Seal.Model.MetaData.Tables">
            <summary>
            List of Tables
            </summary>
        </member>
        <member name="P:Seal.Model.MetaData.TableLinks">
            <summary>
            List of Table Links
            </summary>
        </member>
        <member name="P:Seal.Model.MetaData.Joins">
            <summary>
            List of Joins
            </summary>
        </member>
        <member name="P:Seal.Model.MetaData.Enums">
            <summary>
            List of Enumerated Lists
            </summary>
        </member>
        <member name="P:Seal.Model.MetaData.AllColumns">
            <summary>
            All meta columns
            </summary>
        </member>
        <member name="P:Seal.Model.MetaData.AllTables">
            <summary>
            All tables including links
            </summary>
        </member>
        <member name="M:Seal.Model.MetaData.GetColumnFromGUID(System.String)">
            <summary>
            Returns a column from its GUID
            </summary>
        </member>
        <member name="M:Seal.Model.MetaData.GetColumnFromName(System.String,System.String)">
            <summary>
            Returns a column from its name
            </summary>
        </member>
        <member name="M:Seal.Model.MetaData.GetColumnFromDisplayPath(System.String)">
            <summary>
            Returns a column from its display path
            </summary>
        </member>
        <member name="T:Seal.Model.MetaEnum">
            <summary>
            A MetaEnum defines an enumerated list in a MetaData
            </summary>
        </member>
        <member name="M:Seal.Model.MetaEnum.Create">
            <summary>
            Create a basic enumerated list
            </summary>
            <returns></returns>
        </member>
        <member name="P:Seal.Model.MetaEnum.Name">
            <summary>
            Name of the enumerated list
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.IsDynamic">
            <summary>
            If True, the list is loaded using the 'SQL Select Statement' and/or the 'Script' defined.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.IsDbRefresh">
            <summary>
            If True, the list is loaded before a report execution. Should be set to False if the SQL or the Load Script has poor performances.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.ValuesPerConnection">
            <summary>
            If True, the enum loads and stores the values for each connection.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.HasDynamicDisplay">
            <summary>
            True if the list has dynamic display
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.RequestServerOnPopup">
            <summary>
            True if the list need to request the server on popup 
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.Sql">
            <summary>
            If the list is dynamic, SQL Select statement with 1, 2, 3, 4 or 5 columns used to build the list of values. The first column is used for the identifier, the second optional column is the display value shown in the table result, the third optional column is the display value shown in the restriction list, the fourth optional column defines a custom CSS Style applied to the result cell, the fifth optional column defines a custom CSS Class applied to the result cell.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.Script">
            <summary>
            If the list is dynamic, Razor Script executed to load or update the enumerated list values. The Script is executed after the optional SQL load when 'SQL Select Statement' is not empty.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.UsePosition">
            <summary>
            If True, the current position of the values in the list is used to sort the column in the report result
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.Translate">
            <summary>
            If True, the enumerated values are translated using the Repository translations
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.FilterChars">
            <summary>
            If the list is dynamic, refreshed before execution and the SQL for prompted restriction contains the '{EnumFilter}' keyword, the number of characters typed by the used in the filter box before the enum is built and displayed
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.Message">
            <summary>
            If the list is dynamic, refreshed before execution and has filter characters or dependencies, the message displayed to the end user to trigger the list (e.g. 'Select a country first' or 'Type 5 characters').
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.SqlDisplay">
            <summary>
            Optional SQL Select Statement used to build the values displayed in a prompted restriction. The SQL is used only if the list is dynamic, refreshed before report execution.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.ScriptDisplay">
            <summary>
            Optional Script used to build the values displayed in a prompted restriction. The Script is used only if the list is dynamic, refreshed before report execution.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.HasDependencies">
            <summary>
            True if the list has dependencies to other list
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.Values">
            <summary>
            The list of values used for this enumerated list
            </summary>
        </member>
        <member name="F:Seal.Model.MetaEnum.NewValues">
            <summary>
            New enum values set by the dynamic display Script
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.NumberOfValues">
            <summary>
            The number of values in the collection
            </summary>
        </member>
        <member name="F:Seal.Model.MetaEnum.IsEditable">
            <summary>
            True if the list is editable
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.Source">
            <summary>
            Current MetaSource
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.IsSQL">
            <summary>
            True if the source is a standard SQL source
            </summary>
        </member>
        <member name="M:Seal.Model.MetaEnum.GetSubSetValues(System.String,System.Collections.Generic.Dictionary{Seal.Model.MetaEnum,System.String})">
            <summary>
            Returns the list of the enum values to display after applying filter and depencies
            </summary>
        </member>
        <member name="M:Seal.Model.MetaEnum.RefreshEnum(System.Boolean)">
            <summary>
            Refresh the values of the enumerated list
            </summary>
            <param name="checkOnly"></param>
        </member>
        <member name="M:Seal.Model.MetaEnum.GetDisplayValue(System.String,Seal.Model.MetaConnection,System.Boolean)">
            <summary>
            Return the display value from the identifer
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.HelperRefreshEnum">
            <summary>
            Editor Helper: Refresh values of this list using the SQL Statement
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.Information">
            <summary>
            Last information message when the enum list has been refreshed
            </summary>
        </member>
        <member name="P:Seal.Model.MetaEnum.Error">
            <summary>
            Last error message
            </summary>
        </member>
        <member name="T:Seal.Model.MetaSource">
            <summary>
            A MetaSource contains a list of MetaConnection and a MetaData
            </summary>
        </member>
        <member name="F:Seal.Model.MetaSource.FilePath">
            <summary>
            Current file path of the source
            </summary>
        </member>
        <member name="F:Seal.Model.MetaSource.Repository">
            <summary>
            Current repository
            </summary>
        </member>
        <member name="P:Seal.Model.MetaSource.Connections">
            <summary>
            List of MetaConnection
            </summary>
        </member>
        <member name="P:Seal.Model.MetaSource.ConnectionGUID">
            <summary>
            The connection currently used for this data source
            </summary>
        </member>
        <member name="P:Seal.Model.MetaSource.IsDefault">
            <summary>
            If true, this source is used as default when a new model is created in a report
            </summary>
        </member>
        <member name="P:Seal.Model.MetaSource.IsNoSQL">
            <summary>
            If true, this source contains only tables built from dedicated Razor Scripts (one for the definition and one for the load). The a LINQ query will then be used to fill the models.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaSource.IsSQL">
            <summary>
            If true, this source contains only a table built from a database. The SQL engine will be used to fill the models.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaSource.InitScript">
            <summary>
            If set, the script is executed when a report is initialized for an execution. This may be useful to change dynamically components of the source (e.g. modifying connections, tables, columns, enums, etc.).
            </summary>
        </member>
        <member name="P:Seal.Model.MetaSource.PreSQL">
            <summary>
            SQL Statement executed after the connection is open and before the query is executed. The statement may contain Razor script if it starts with '@'.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaSource.PostSQL">
            <summary>
            SQL Statement executed before the connection is closed and after the query is executed. The statement may contain Razor script if it starts with '@'.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaSource.IgnorePrePostError">
            <summary>
            If true, errors occuring during the Pre or Post SQL statements are ignored and the execution continues
            </summary>
        </member>
        <member name="F:Seal.Model.MetaSource.LastModification">
            <summary>
            Last modification Date Time
            </summary>
        </member>
        <member name="P:Seal.Model.MetaSource.Connection">
            <summary>
            Current MetaConnection
            </summary>
        </member>
        <member name="F:Seal.Model.MetaSource.Tag">
            <summary>
            Object that can be used at run-time for any purpose
            </summary>
        </member>
        <member name="P:Seal.Model.MetaSource.MetaData">
            <summary>
            MetaData contained in the source 
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.AddConnection">
            <summary>
            Create a MetaConnection in the source 
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.RemoveConnection(Seal.Model.MetaConnection)">
            <summary>
            Remove a MetaConnection from the source
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.AddTable(System.Boolean)">
            <summary>
            Add a MetaTable in the source
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.RemoveTable(Seal.Model.MetaTable)">
            <summary>
            Remove a MetaTable from the source
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.RemoveTableLink(Seal.Model.MetaTableLink)">
            <summary>
            Remove a MetaTableLink from the source
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.AddColumn(Seal.Model.MetaTable)">
            <summary>
            Add a MetaColumn in a MetaTable
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.AddJoin">
            <summary>
            Add a MetaJoin to the MetaData
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.RemoveJoin(Seal.Model.MetaJoin)">
            <summary>
            Remove a MetaJoin from the MetaData
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.AddEnum">
            <summary>
            Add a MetaEnum to the MetaData
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.CreateEnumFromColumn(Seal.Model.MetaColumn)">
            <summary>
            Helper to create a MetaEnum for a given MetaColumn
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.RemoveEnum(Seal.Model.MetaEnum)">
            <summary>
            Remove a MetaEnum from the MetaData
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.InitReferences(Seal.Model.Repository)">
            <summary>
            Init all object references
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.AddDefaultConnection(Seal.Model.Repository)">
            <summary>
            Add a default MetaConnection to the source
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.Create(Seal.Model.Repository)">
            <summary>
            Create a basic MetaSource
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.LoadFromFile(System.String)">
            <summary>
            Load the MetaSource from a file
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.SaveToFile">
            <summary>
            Save to the current file
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.SaveToFile(System.String)">
            <summary>
            Save to a file
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Seal.Model.MetaSource.Refresh">
            <summary>
            Refresh all tables having dynamic columns and needed a refresh 
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.CheckSQL(System.String,System.Collections.Generic.List{Seal.Model.MetaTable},Seal.Model.ReportModel,System.Boolean)">
            <summary>
            Check a SQL statement, the check includes also all the Pre/Post SQL statements defined.
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.CheckLINQ(System.String,System.Collections.Generic.List{Seal.Model.MetaTable},Seal.Model.ReportModel)">
            <summary>
            Check a LINQ statement
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.GetOpenConnection">
            <summary>
            Returns an open DbConnection
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.AddColumnsFromCatalog(System.Collections.Generic.List{Seal.Model.MetaColumn},System.Data.Common.DbConnection,Seal.Model.MetaTable)">
            <summary>
            Fill a list of columns from a table catalog
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.GetTableName(System.String)">
            <summary>
            Returns a full table name from a raw name
            </summary>
        </member>
        <member name="M:Seal.Model.MetaSource.GetColumnName(System.String)">
            <summary>
            Returns a full column name from a raw name
            </summary>
        </member>
        <member name="P:Seal.Model.MetaSource.Information">
            <summary>
            Last information message
            </summary>
        </member>
        <member name="P:Seal.Model.MetaSource.Error">
            <summary>
            Last error message
            </summary>
        </member>
        <member name="T:Seal.Model.MetaTable">
            <summary>
            A MetaTable defines a table in a database and contains a list of MetaColumns.
            </summary>
        </member>
        <member name="M:Seal.Model.MetaTable.Create">
            <summary>
            Creates a basic MetaTable
            </summary>
        </member>
        <member name="F:Seal.Model.MetaTable.Log">
            <summary>
            Current execution log
            </summary>
        </member>
        <member name="M:Seal.Model.MetaTable.LogMessage(System.String,System.Object[])">
            <summary>
            Logs message in the execution log
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.Name">
            <summary>
            Name of the table in the database. The name can be empty if an SQL Statement is specified.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.Sql">
            <summary>
            SQL Select Statement executed to define the table. If empty, the table name is used.
            </summary>
        </member>
        <member name="F:Seal.Model.MetaTable.NoSQLTable">
            <summary>
            DataTable used for No SQL Source 
            </summary>
        </member>
        <member name="F:Seal.Model.MetaTable.NoSQLModel">
            <summary>
            ReportModel set for No SQL Source
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.TemplateName">
            <summary>
            The Razor Script used to built the DataTable object that defines the table
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.Parameters">
            <summary>
            List of Table Parameters
            </summary>
        </member>
        <member name="M:Seal.Model.MetaTable.InitParameters">
            <summary>
            Init the  parameters from the template
            </summary>
        </member>
        <member name="M:Seal.Model.MetaTable.IsIdentical(Seal.Model.MetaTable)">
            <summary>
            Helper to check if the 2 MetaTable have the same definition
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.DefaultDefinitionScript">
            <summary>
            Default definition script coming either from the template or from the root table (for a subtable)
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.DefaultLoadScript">
            <summary>
            Default load script coming either from the template or from the root table (for a subtable)
            </summary>
        </member>
        <member name="M:Seal.Model.MetaTable.BeforeSerialization">
            <summary>
            Operations performed before the serialization
            </summary>
        </member>
        <member name="M:Seal.Model.MetaTable.AfterSerialization">
            <summary>
            Operations performed after the serialization
            </summary>
        </member>
        <member name="M:Seal.Model.MetaTable.GetValue(System.String)">
            <summary>
            Returns the parameter value
            </summary>
        </member>
        <member name="M:Seal.Model.MetaTable.GetBoolValue(System.String,System.Boolean)">
            <summary>
            Returns a parameter boolean value with a default if it does not exist
            </summary>
        </member>
        <member name="M:Seal.Model.MetaTable.GetNumericValue(System.String)">
            <summary>
            Returns a paramter ineteger value
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.DefinitionScript">
            <summary>
            The Razor Script used to built the DataTable object that defines the table
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.LoadScript">
            <summary>
            The Default Razor Script used to load the data in the table. This can be overwritten in the model.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.CacheDuration">
            <summary>
            Duration in seconds to keep the result DataTable in cache after a load. If 0, the table is always reloaded.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.Alias">
            <summary>
            If not empty, table alias name used in the SQL statement. The table alias is necessary if a SQL Statement is specified.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.DynamicColumns">
            <summary>
            If true, columns are generated automatically from the Table Name or the SQL Select Statement by reading the database catalog
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.KeepColumnNames">
            <summary>
            "If true, the display names of the columns are kept when generated from the source SQL
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.Type">
            <summary>
            Type of the table got from database catalog
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.ParameterValues">
            <summary>
            The parameter values for edition.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.MustRefresh">
            <summary>
            If true, the table must be refreshed for dynamic columns
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.PreSQL">
            <summary>
            SQL Statement executed before the query when the table is involved. The statement may contain Razor script if it starts with '@'.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.PostSQL">
            <summary>
            SQL Statement executed after the query when the table is involved. The statement may contain Razor script if it starts with '@'.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.IgnorePrePostError">
            <summary>
            If true, errors occuring during the Pre or Post SQL statements are ignored and the execution continues
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.WhereSQL">
            <summary>
            Additional SQL added in the WHERE clause when the table is involved in a query. The text may contain Razor script if it starts with '@'.
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.Columns">
            <summary>
            List of MetColumn defined for the table
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.AliasName">
            <summary>
            Alias name of the table
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.LINQResultName">
            <summary>
            Name of the DataTable LINQ Result: Source name for SQL, table name for No SQL
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.LINQExpressionName">
            <summary>
            LINQ expression of the table name
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.FullSQLName">
            <summary>
            Full SQL name of the table
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.DisplayName">
            <summary>
            Display name including the type
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.FullDisplayName">
            <summary>
            Display name including the type and the source name
            </summary>
        </member>
        <member name="F:Seal.Model.MetaTable.IsEditable">
            <summary>
            True if the table is editable
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.IsSQL">
            <summary>
            True if the source containing the table is a standard SQL source
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.IsSubTable">
            <summary>
            True if the table is a sub-table of a model
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.IsForSQLModel">
            <summary>
            True if the table is for a SQL Model
            </summary>
        </member>
        <member name="F:Seal.Model.MetaTable.Model">
            <summary>
            Report Model when the MetaTable comes from a SQL Model or when is a SubTable of a LINQ query
            </summary>
        </member>
        <member name="M:Seal.Model.MetaTable.GetExecSQLName(System.String@,System.String@)">
            <summary>
            Returns the SQL with the name and the CTE (Common Table Expression)
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.Source">
            <summary>
            Current MetaSource
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.LINQSourceGUID">
            <summary>
            Source GUID for the LINQ Sub-models
            </summary>
        </member>
        <member name="M:Seal.Model.MetaTable.GetLastDisplayOrder">
            <summary>
            Returns the last order to display the columns
            </summary>
        </member>
        <member name="M:Seal.Model.MetaTable.BuildNoSQLTable(System.Boolean)">
            <summary>
            For No SQL Source, build the DataTable from the DefinitionScript, if withLoad is true, the table is then loaded with the LoadScript
            </summary>
        </member>
        <member name="M:Seal.Model.MetaTable.Refresh">
            <summary>
            Refresh the dynamic columns
            </summary>
        </member>
        <member name="M:Seal.Model.MetaTable.SortColumns(System.Boolean)">
            <summary>
            Sort the table columns either by alphanumeric order or by position
            </summary>
        </member>
        <member name="M:Seal.Model.MetaTable.CheckTable(Seal.Model.MetaColumn)">
            <summary>
            Check the table. If a MetaColumn is specified, only the column is checked.
            </summary>
        </member>
        <member name="M:Seal.Model.MetaTable.ShowValues(Seal.Model.MetaColumn)">
            <summary>
            Return the values from a column in the table
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="F:Seal.Model.MetaTable.LoadDate">
            <summary>
            Load date time to handle caching for No SQL tables
            </summary>
        </member>
        <member name="F:Seal.Model.MetaTable.NoSQLCacheTable">
            <summary>
            DataTable used for Cache Table (No SQL Source)
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.HelperRefreshColumns">
            <summary>
            Editor Helper: Create or update dynamic columns for this table
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.HelperCheckTable">
            <summary>
            Editor Helper: Check the table definition
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.Information">
            <summary>
            Last information message
            </summary>
        </member>
        <member name="P:Seal.Model.MetaTable.Error">
            <summary>
            Last error message
            </summary>
        </member>
        <member name="T:Seal.Model.NamespaceDoc">
            <summary>
            Main Seal Report Objects: Repository (Sources, MetaData), Reports (Models, Views)   
            </summary>
        </member>
        <member name="T:Seal.Model.ReportExecutionLog">
            <summary>
            Interface dedicated to log execution messages
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecutionLog.LogMessage(System.String,System.Object[])">
            <summary>
            Log a message displayed in the messages panel of the report result
            </summary>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="T:Seal.Model.Report">
            <summary>
            The main Report class to store a report definition, plus extra properties for execution 
            </summary>
        </member>
        <member name="P:Seal.Model.Report.GUID">
            <summary>
            Unique identifier of the report
            </summary>
        </member>
        <member name="P:Seal.Model.Report.DisplayName">
            <summary>
            The report name displayed in the result. If empty, the report file name is used. The display name may contain a Razor script  if it starts with '@'.
            </summary>
        </member>
        <member name="P:Seal.Model.Report.DisplayNameEx">
            <summary>
            The final display name of the report. It may include script execution defined in DisplayName
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ViewGUID">
            <summary>
            The view used by default to execute the report.
            </summary>
        </member>
        <member name="F:Seal.Model.Report.CurrentViewGUID">
            <summary>
            GUID of the view to being executed
            </summary>
        </member>
        <member name="P:Seal.Model.Report.InputValues">
            <summary>
            Definition of additional report input values (actually a restriction used as value only that may be prompted). Input values can then be used in the task scripts or any scripts used to generate the report.
            </summary>
        </member>
        <member name="P:Seal.Model.Report.PrintQueries">
            <summary>
            If true, the query is printed in the report messages (for debug purpose).
            </summary>
        </member>
        <member name="P:Seal.Model.Report.Sources">
            <summary>
            List of data sources of the report (either from repository or defined in the report itself)
            </summary>
        </member>
        <member name="P:Seal.Model.Report.Models">
            <summary>
            List of models of the report
            </summary>
        </member>
        <member name="P:Seal.Model.Report.Outputs">
            <summary>
            List of outputs of the report
            </summary>
        </member>
        <member name="P:Seal.Model.Report.Tasks">
            <summary>
            List of tasks of the report
            </summary>
        </member>
        <member name="P:Seal.Model.Report.CommonScripts">
            <summary>
            List of scripts added to all scripts executed for the report (including tasks). This may be useful to defined common functions for the report.
            </summary>
        </member>
        <member name="P:Seal.Model.Report.CommonScriptsHeader">
            <summary>
            The header to include in razor scripts executed for this report
            </summary>
        </member>
        <member name="M:Seal.Model.Report.GetCommonScriptsHeader(Seal.Model.CommonScript)">
            <summary>
            The header to include in razor scripts executed for this report, except the one being edited
            </summary>
        </member>
        <member name="M:Seal.Model.Report.GetReportCommonScriptKey(System.String,System.Object)">
            <summary>
            Returns a common script key from a given name and model
            </summary>      
        </member>
        <member name="M:Seal.Model.Report.GetInputValueByName(System.String)">
            <summary>
            Returns an input value (Report Restriction) from a given name
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ExecutionInputValues">
            <summary>
            The current list of input values restrictions of the report at execution time
            </summary>
        </member>
        <member name="P:Seal.Model.Report.Views">
            <summary>
            List of views of the report
            </summary>
        </member>
        <member name="P:Seal.Model.Report.InitScript">
            <summary>
            A Razor script executed when the report is initialized for the execution. The script can be used to modify the report definition (e.g. set default values in restrictions). 
            </summary>
        </member>
        <member name="P:Seal.Model.Report.NavigationScript">
            <summary>
            Optional Razor Script executed if script navigation links have been added in the CellScript
            </summary>
        </member>
        <member name="M:Seal.Model.Report.GetReportNavigationScriptLink(System.String,System.String)">
            <summary>
            Get the hyperlink string to execute the report navigation script.
            </summary>
        </member>
        <member name="M:Seal.Model.Report.GetReportNavigationFileDownloadLink(System.String,System.String)">
            <summary>
            Get the hyperlink string to execute the report navigation script to download a file.
            </summary>
        </member>
        <member name="P:Seal.Model.Report.Schedules">
            <summary>
            List of schedules of the report
            </summary>
        </member>
        <member name="F:Seal.Model.Report.Repository">
            <summary>
            Current repository of the report
            </summary>
        </member>
        <member name="F:Seal.Model.Report.FilePath">
            <summary>
            Current file path of the report
            </summary>
        </member>
        <member name="P:Seal.Model.Report.RelativeFilePath">
            <summary>
            Current file path without reports directory 
            </summary>
        </member>
        <member name="F:Seal.Model.Report.LastModification">
            <summary>
            Last modification date of the report file 
            </summary>
        </member>
        <member name="F:Seal.Model.Report.ResultFilePath">
            <summary>
            Path of the result file after a report execution 
            </summary>
        </member>
        <member name="P:Seal.Model.Report.DisplayResultFilePath">
            <summary>
            File path displayed to the user
            </summary>
        </member>
        <member name="P:Seal.Model.Report.HTMLDisplayFilePath">
            <summary>
            Path of the HTML intermediate result file
            </summary>
        </member>
        <member name="P:Seal.Model.Report.OutputFolderDeviceResultFolder">
            <summary>
            Path of the folder when executed to an output device
            </summary>
        </member>
        <member name="F:Seal.Model.Report.WebUrl">
            <summary>
            URL when executed from the Web Report Server 
            </summary>
        </member>
        <member name="F:Seal.Model.Report.ExecutionGUID">
            <summary>
            Current identifier of the report's execution
            </summary>
        </member>
        <member name="P:Seal.Model.Report.GenerationFolder">
            <summary>
            Current folder use for the file generation during execution
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ResultFileName">
            <summary>
            Current file name of the result file
            </summary>
        </member>
        <member name="M:Seal.Model.Report.InitForExecution">
            <summary>
            Procedure executed before any execution: set default parameters values and executes init scripts.
            </summary>
        </member>
        <member name="P:Seal.Model.Report.HasValidationErrors">
            <summary>
            After execution, indicates if the report has validation errors
            </summary>
        </member>
        <member name="F:Seal.Model.Report.ExecutionMessages">
             <summary>
            Execution messages after execution
             </summary>
        </member>
        <member name="F:Seal.Model.Report.ExecutionErrors">
             <summary>
            Execution errors after execution
             </summary>
        </member>
        <member name="F:Seal.Model.Report.ExecutionErrorStackTrace">
             <summary>
            Execution errors stack trace after execution
             </summary>
        </member>
        <member name="P:Seal.Model.Report.WebExecutionErrors">
             <summary>
            Execution errors after execution used by the Web Report Server
             </summary>
        </member>
        <member name="P:Seal.Model.Report.ShowExecutionMessages">
            <summary>
            Indicates if the execution messages are shown in the report
            </summary>
        </member>
        <member name="F:Seal.Model.Report.LoadErrors">
            <summary>
            Error messages got during the load of the report
            </summary>
        </member>
        <member name="F:Seal.Model.Report.UpgradeWarnings">
            <summary>
            Warning messages in case of product upgrade
            </summary>
        </member>
        <member name="F:Seal.Model.Report.TemplateParsingErrors">
            <summary>
            Error messages got during the parsing of the templates
            </summary>
        </member>
        <member name="F:Seal.Model.Report.Status">
            <summary>
            Execution status of the report
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ExecutionName">
            <summary>
            Name of the report during its execution
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ExecutionTasks">
            <summary>
            List of tasks to be executed (actually tasks enabled)
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ExecutionModels">
            <summary>
            List of model to process during the report execution. By default, only models involved in displayed views are executed, unless they have the ForceModelsLoad flag set to true.
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ExecutionViews">
            <summary>
            List of all views to parse during the report execution.
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ExecutionProgression">
            <summary>
            Execution progression in percentage
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ExecutionProgressionMessage">
            <summary>
            Execution progression message
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ExecutionProgressionModels">
            <summary>
            Execution progression percentage for the models processing
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ExecutionProgressionModelsMessage">
            <summary>
            Execution progression percentage message for the models processing
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ExecutionProgressionTasks">
            <summary>
            Execution progression percentage for the tasks processing
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ExecutionProgressionTasksMessage">
            <summary>
            Execution progression percentage for the tasks processing
            </summary>
        </member>
        <member name="F:Seal.Model.Report.CheckingExecution">
            <summary>
            True if the report is being tested for execution (from the Server Manager)
            </summary>
        </member>
        <member name="F:Seal.Model.Report.SchedulesModified">
            <summary>
            True if the schedules have been modified
            </summary>
        </member>
        <member name="F:Seal.Model.Report.SchedulesWithCurrentUser">
            <summary>
            True if the schedules have to be defined with the current user, otherwise SYSTEM is used
            </summary>
        </member>
        <member name="P:Seal.Model.Report.IsExecuting">
            <summary>
            True if the report is being executed
            </summary>
        </member>
        <member name="F:Seal.Model.Report._cancel">
            <summary>
            True if the report has been cancelled
            </summary>
        </member>
        <member name="F:Seal.Model.Report.RenderOnly">
            <summary>
            True if the report has only to be rendered
            </summary>
        </member>
        <member name="F:Seal.Model.Report.ExecutionStartDate">
            <summary>
            Execution start date time
            </summary>
        </member>
        <member name="F:Seal.Model.Report.ExecutionRenderingDate">
            <summary>
            Rendering date time
            </summary>
        </member>
        <member name="F:Seal.Model.Report.ExecutionEndDate">
            <summary>
            Execution end date time
            </summary>
        </member>
        <member name="F:Seal.Model.Report.ExecutionTriggerView">
            <summary>
            Restriction View that has triggered the execution
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ExecutionModelDuration">
            <summary>
            Duration of the model execution
            </summary>
        </member>
        <member name="F:Seal.Model.Report.IsNavigating">
            <summary>
            True is the report execution occured after an navigation (sub-report or drill)
            </summary>
        </member>
        <member name="F:Seal.Model.Report.HasNavigation">
            <summary>
            True if the report has navigation links in the result
            </summary>
        </member>
        <member name="F:Seal.Model.Report.OutputToExecute">
            <summary>
            Current report output to execute
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ForOutput">
            <summary>
            True if the execution is for a report output
            </summary>
        </member>
        <member name="F:Seal.Model.Report.OnlyBody">
            <summary>
            True if the execution generates only the report body (not headers)
            </summary>
        </member>
        <member name="F:Seal.Model.Report.TaskToExecute">
            <summary>
            Task set if only one task has to be executed
            </summary>
        </member>
        <member name="P:Seal.Model.Report.GenerateHTMLDisplay">
            <summary>
            True if the html display result is being generated
            </summary>
        </member>
        <member name="P:Seal.Model.Report.IsBasicHTMLWithNoOutput">
            <summary>
            True if the report is not for an output and has no external viewer
            </summary>
        </member>
        <member name="F:Seal.Model.Report.ExecutionContext">
            <summary>
            Context of the execution:  DesignerReport, DesignerOutput, TaskScheduler, WebReport, WebOutput
            </summary>
        </member>
        <member name="F:Seal.Model.Report.ExecutionViewResultFormat">
            <summary>
            Current result format generated durin a View Result: html, print, csv, pdf, excel
            </summary>
        </member>
        <member name="F:Seal.Model.Report.SecurityContext">
            <summary>
            Current security user of the report execution
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ExecutionView">
            <summary>
            Root view being executed
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ExecutionFullDuration">
            <summary>
            Full execution duration
            </summary>
        </member>
        <member name="F:Seal.Model.Report.PreInputRestrictions">
            <summary>
            Helper Dictionary to manage restrictions in the Web Report Server
            </summary>
        </member>
        <member name="F:Seal.Model.Report.InputRestrictions">
            <summary>
            Helper Dictionary to manage restrictions in the Web Report Server
            </summary>
        </member>
        <member name="M:Seal.Model.Report.GetInputRestriction(System.String)">
            <summary>
            Input restriction value for a given key
            </summary>
        </member>
        <member name="P:Seal.Model.Report.HasErrors">
            <summary>
            True if the execution has errors
            </summary>
        </member>
        <member name="P:Seal.Model.Report.TaskFolder">
            <summary>
            Task Folder used to store the schedules of the report
            </summary>
        </member>
        <member name="P:Seal.Model.Report.HasRestrictions">
            <summary>
            True if the report has restrictions to prompt
            </summary>
        </member>
        <member name="P:Seal.Model.Report.HasChart">
            <summary>
            True if the report has chart
            </summary>
        </member>
        <member name="P:Seal.Model.Report.HasNVD3Chart">
            <summary>
            True if the report has NVD3 chart
            </summary>
        </member>
        <member name="P:Seal.Model.Report.HasChartJSChart">
            <summary>
            True if the report has JS chart
            </summary>
        </member>
        <member name="P:Seal.Model.Report.HasPlotlyChart">
            <summary>
            True if the report has Plotly chart
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ResultFileEncoding">
            <summary>
            Encoding of the result file
            </summary>
        </member>
        <member name="M:Seal.Model.Report.InitReferences">
            <summary>
            Init all references of the report: Sources, Models, Views, Taks, InputValues
            </summary>
        </member>
        <member name="M:Seal.Model.Report.LoadSources(System.Boolean)">
            <summary>
            Load report sources from their repository sources.
            By default, only report sources involved in models or tasks are loaded.
            </summary>
        </member>
        <member name="M:Seal.Model.Report.LoadFromFile(System.String,Seal.Model.Repository,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Load a report from a file
            </summary>
        </member>
        <member name="M:Seal.Model.Report.Create(Seal.Model.Repository)">
            <summary>
            Create an empty report
            </summary>
            <returns>the new report</returns>
        </member>
        <member name="M:Seal.Model.Report.SaveToFile">
            <summary>
            Save the current report to its file
            </summary>
        </member>
        <member name="M:Seal.Model.Report.InitGUIDAndSchedules">
            <summary>
            Init view GUIDs and clear schedule before a report Copy
            </summary>
        </member>
        <member name="M:Seal.Model.Report.SynchronizeTasks">
            <summary>
            Synchronize all report schedules defined in the report with the Windows Task Scheduler.
            </summary>
        </member>
        <member name="M:Seal.Model.Report.SaveToFile(System.String)">
            <summary>
            Save report to a given file
            </summary>
        </member>
        <member name="M:Seal.Model.Report.Clone">
            <summary>
            Clone a report
            </summary>
        </member>
        <member name="M:Seal.Model.Report.CheckLinkedTablesSources">
            <summary>
            Check report sources to have all sources referenced by linked tables 
            </summary>
        </member>
        <member name="M:Seal.Model.Report.AddSource(Seal.Model.MetaSource)">
            <summary>
            Add a default source to the report
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Seal.Model.Report.RemoveSource(Seal.Model.ReportSource)">
            <summary>
            Remove a report source from the report
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Seal.Model.Report.AddModel(System.Boolean)">
            <summary>
            Add a default model to the report (either SQL or Standard)
            </summary>
        </member>
        <member name="M:Seal.Model.Report.RemoveModel(Seal.Model.ReportModel)">
            <summary>
            Remove a report model from the report
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:Seal.Model.Report.AddOutput(Seal.Model.OutputDevice)">
            <summary>
            Add a default output to the report
            </summary>
        </member>
        <member name="M:Seal.Model.Report.RemoveOutput(Seal.Model.ReportOutput)">
            <summary>
            Remove an output from the report
            </summary>
        </member>
        <member name="M:Seal.Model.Report.AddTask">
            <summary>
            Add a task to the report
            </summary>
        </member>
        <member name="M:Seal.Model.Report.RemoveTask(Seal.Model.ReportTask)">
            <summary>
            Remove a task from the report
            </summary>
            <param name="task"></param>
        </member>
        <member name="M:Seal.Model.Report.AddModelHTMLView">
            <summary>
            Add a model view to the report
            </summary>
            <returns></returns>
        </member>
        <member name="M:Seal.Model.Report.AddRootView">
            <summary>
            Add a root report view to the report
            </summary>
            <returns></returns>
        </member>
        <member name="M:Seal.Model.Report.AddView(System.String)">
            <summary>
            Add a view with a template name
            </summary>
        </member>
        <member name="M:Seal.Model.Report.AddChildView(Seal.Model.ReportView,System.String)">
            <summary>
            From a parent view, add a child view with a template name
            </summary>
        </member>
        <member name="M:Seal.Model.Report.AddChildView(Seal.Model.ReportView,Seal.Model.ReportViewTemplate)">
            <summary>
            From a parent view, add a child view with a template
            </summary>
        </member>
        <member name="M:Seal.Model.Report.RemoveView(Seal.Model.ReportView,Seal.Model.ReportView)">
            <summary>
            Remove a view from its parent 
            </summary>
        </member>
        <member name="M:Seal.Model.Report.AddSchedule(Seal.Model.ReportOutput)">
            <summary>
            Add a schedule to the report
            </summary>
        </member>
        <member name="M:Seal.Model.Report.RemoveSchedule(Seal.Model.ReportSchedule)">
            <summary>
            Remove a schedule from the report
            </summary>
        </member>
        <member name="M:Seal.Model.Report.GetImageFile(System.String)">
            <summary>
            The image file name of the HTML result according to execution context 
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Seal.Model.Report.AttachImageFile(System.String)">
            <summary>
            The image file name or source of the HTML result according to execution context 
            </summary>
        </member>
        <member name="M:Seal.Model.Report.AttachScriptFiles(System.String)">
            <summary>
            For Script Files, insert the attached file names or their contents according to execution context 
            </summary>
        </member>
        <member name="M:Seal.Model.Report.AttachScriptFile(System.String,System.String)">
            <summary>
            For a Script File, insert the attached script file name or it content according to execution context 
            </summary>
        </member>
        <member name="M:Seal.Model.Report.AttachCSSFiles(System.String)">
            <summary>
            For CSS Files, insert the attached file names or their contents according to execution context 
            </summary>
        </member>
        <member name="M:Seal.Model.Report.AttachCSSFile(System.String,System.String)">
            <summary>
            For a CSS File, insert the attached file name or its content according to execution context 
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ExecutionCommonRestrictions">
            <summary>
            List of common restrictions prompted at execution
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ExecutionPromptedRestrictions">
            <summary>
            List of restrictions prompted at execution from the Report Result
            </summary>
        </member>
        <member name="M:Seal.Model.Report.IsInRestrictionView(Seal.Model.ReportRestriction)">
            <summary>
            Returns true if the restriction is referenced by a Restriction View
            </summary>
            <param name="restriction"></param>
            <returns></returns>
        </member>
        <member name="P:Seal.Model.Report.ExecutionViewRestrictions">
            <summary>
            List of all view restrictions prompted at execution
            </summary>
        </member>
        <member name="P:Seal.Model.Report.AllRestrictions">
            <summary>
            List of all restrictions of all models of the report, plus the input values
            </summary>
        </member>
        <member name="P:Seal.Model.Report.AllExecutionRestrictions">
            <summary>
            List of all restrictions involved in the execution
            </summary>
        </member>
        <member name="M:Seal.Model.Report.GetModelsToExecute(Seal.Model.ReportView,System.Collections.Generic.List{Seal.Model.ReportModel})">
            <summary>
            For a given view, fill the list of models to execute
            </summary>
        </member>
        <member name="F:Seal.Model.Report.CurrentView">
            <summary>
            Current view used when parsing
            </summary>
        </member>
        <member name="F:Seal.Model.Report.CurrentModelView">
            <summary>
            Current model view used when parsing
            </summary>
        </member>
        <member name="F:Seal.Model.Report.CurrentPage">
            <summary>
            Current page used when parsing
            </summary>
        </member>
        <member name="M:Seal.Model.Report.Translate(System.String)">
            <summary>
            Translate a reference text from the Report context
            </summary>
        </member>
        <member name="M:Seal.Model.Report.TranslateToJS(System.String)">
            <summary>
            Translate in a JavaScript format a reference text from the Report context 
            </summary>
        </member>
        <member name="M:Seal.Model.Report.ContextTranslate(System.String,System.String)">
            <summary>
            Translate a reference text from a given context
            </summary>
        </member>
        <member name="M:Seal.Model.Report.Translate(System.String,System.Object[])">
            <summary>
            Translate a reference text from the Report context with args parameter
            </summary>
        </member>
        <member name="M:Seal.Model.Report.TranslateDateKeywords(System.String)">
            <summary>
            Translate a date keyword
            </summary>
        </member>
        <member name="M:Seal.Model.Report.TranslateDateKeywordsToEnglish(System.String)">
            <summary>
            Translate a date keyword in english
            </summary>
        </member>
        <member name="P:Seal.Model.Report.DateKeywordsList">
            <summary>
            List of date keywords in english
            </summary>
        </member>
        <member name="P:Seal.Model.Report.CultureInfo">
            <summary>
            Current culture of the execution
            </summary>
        </member>
        <member name="P:Seal.Model.Report.HasExternalViewer">
            <summary>
            True if the report result has an external viewer (for PDF, CSV or Excel)
            </summary>
        </member>
        <member name="P:Seal.Model.Report.IsServerPaginationEnabled">
            <summary>
            True if the server pagination for DataTables is enabled
            </summary>
        </member>
        <member name="F:Seal.Model.Report.PdfConversion">
            <summary>
            True if a PDF conversion will be done after the HTML generation
            </summary>
        </member>
        <member name="P:Seal.Model.Report.Format">
            <summary>
            Report format
            </summary>
        </member>
        <member name="P:Seal.Model.Report.ResultExtension">
            <summary>
            File extension of the result file
            </summary>
        </member>
        <member name="P:Seal.Model.Report.PrintLayout">
            <summary>
            True if the print layout should be used for the HTML generation 
            </summary>
        </member>
        <member name="F:Seal.Model.Report.DrillParents">
            <summary>
            List of drill parents at execution
            </summary>
        </member>
        <member name="F:Seal.Model.Report.NavigationLinks">
            <summary>
            List of links used for Script navigation
            </summary>
        </member>
        <member name="M:Seal.Model.Report.UpdateViewParameter(System.String,System.String,System.String)">
            <summary>
            Helper to update a view parameter
            </summary>
        </member>
        <member name="F:Seal.Model.Report.Tag">
            <summary>
            Object that can be used at run-time for any purpose
            </summary>
        </member>
        <member name="F:Seal.Model.Report.Tag2">
            <summary>
            Object that can be used at run-time for any purpose
            </summary>
        </member>
        <member name="F:Seal.Model.Report.Tag3">
            <summary>
            Object that can be used at run-time for any purpose
            </summary>
        </member>
        <member name="M:Seal.Model.Report.FindView(System.Collections.Generic.List{Seal.Model.ReportView},System.String)">
            <summary>
            Helper to find a view from its identifier
            </summary>
        </member>
        <member name="M:Seal.Model.Report.FindViewFromName(System.Collections.Generic.List{Seal.Model.ReportView},System.String)">
            <summary>
            Helper to find a view from its name
            </summary>
        </member>
        <member name="P:Seal.Model.Report.AllViews">
            <summary>
            Helper to list of all the views of the report
            </summary>
        </member>
        <member name="M:Seal.Model.Report.GetViewFromExecId(System.String)">
            <summary>
            Helper to get the a view from its execution id
            </summary>
        </member>
        <member name="M:Seal.Model.Report.FindViewFromTemplate(System.Collections.Generic.List{Seal.Model.ReportView},System.String)">
            <summary>
            Helper to find a view from its template name
            </summary>
        </member>
        <member name="M:Seal.Model.Report.CancelExecution">
            <summary>
            Cancel the report execution
            </summary>
        </member>
        <member name="M:Seal.Model.Report.LogMessage(System.String,System.Object[])">
            <summary>
            Log Interface implementation
            </summary>
        </member>
        <member name="M:Seal.Model.Report.GetReportSource(System.String)">
            <summary>
            Helper to get a report source from its name
            </summary>
        </member>
        <member name="M:Seal.Model.Report.GetReportModel(System.String)">
            <summary>
            Helper to get a report model from its name
            </summary>
        </member>
        <member name="M:Seal.Model.Report.TranslateRepository(System.String,System.String,System.String)">
            <summary>
            Repository Translate using the ReportViewName context
            </summary>
        </member>
        <member name="M:Seal.Model.Report.TranslateDisplayName(System.String)">
            <summary>
            Translate using the ReportDisplayName context
            </summary>
        </member>
        <member name="M:Seal.Model.Report.TranslateViewName(System.String)">
            <summary>
            Translate using the ReportViewName context
            </summary>
        </member>
        <member name="M:Seal.Model.Report.TranslateOutputName(System.String)">
            <summary>
            Translate using the ReportOutputName context
            </summary>
        </member>
        <member name="M:Seal.Model.Report.TranslateGeneral(System.String)">
            <summary>
            Translate using the ReportGeneral context
            </summary>
        </member>
        <member name="M:Seal.Model.Report.TranslateElement(Seal.Model.ReportElement,System.String)">
            <summary>
            Translate using the Element context
            </summary>
        </member>
        <member name="M:Seal.Model.Report.TranslateEnumValue(Seal.Model.MetaEnum,System.String)">
            <summary>
            Translate using the Enum context
            </summary>
        </member>
        <member name="M:Seal.Model.Report.EnumMessage(Seal.Model.MetaEnum)">
            <summary>
            Translate the enum message using the EnumMessage context
            </summary>
        </member>
        <member name="M:Seal.Model.Report.LogExecution">
            <summary>
            Log the report execution in the Log repository folder
            </summary>
        </member>
        <member name="T:Seal.Model.ReportComponent">
            <summary>
            Component of the report having a reference to a Report object
            </summary>
        </member>
        <member name="P:Seal.Model.ReportComponent.Report">
            <summary>
            The current report
            </summary>
        </member>
        <member name="T:Seal.Model.ReportElement">
            <summary>
            A report element is a column to display in a report. A report element is a child of a MetaColumn.
            </summary>
        </member>
        <member name="M:Seal.Model.ReportElement.UpdateEditorAttributes">
            <summary>
            Update editor attributes in the property grid
            </summary>
        </member>
        <member name="M:Seal.Model.ReportElement.Create">
            <summary>
            Create a report element with a GUID
            </summary>
            <returns></returns>
        </member>
        <member name="P:Seal.Model.ReportElement.IsEnum">
            <summary>
            True if the element has an enumerated list
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.IsNumeric">
            <summary>
            True if the element is for numeric values
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.IsText">
            <summary>
            True if the element is for text values
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.IsDateTime">
            <summary>
            True if the element is for Date Time values
            </summary>
        </member>
        <member name="M:Seal.Model.ReportElement.SetDefaults">
            <summary>
            Depending on the element type, set defaut aggreate functions: AggregateFunction, TotalAggregateFunction
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.PivotPosition">
            <summary>
            Position of the element in the Cross Table: Row, Column, Page or Data 
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.DisplayNameEl">
            <summary>
            Name of the element when displayed in result tables or restrictions
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.DisplayNameWithModel">
            <summary>
            Name of the element with the model name
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.DisplayNameElTranslated">
            <summary>
            Name of the element translated
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.SortOrder">
            <summary>
            Sort order in the result tables. Page elements are sorted first, then Row, Column and Data elements.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.TypeEd">
            <summary>
            Data type of the column
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.ShowSubTotals">
            <summary>
            If true, a line showing sub-totals is added to the main data table when the value of the element changes
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.TypeEl">
            <summary>
            Final type of the element
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.FormatEl">
            <summary>
            Final format of the element
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.HasTimeEl">
            <summary>
            True is the element has a time format
            </summary>
        </member>
        <member name="M:Seal.Model.ReportElement.ElementDisplayValue(System.Object)">
            <summary>
            Display value of the element
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.IsSorted">
            <summary>
            True if the element is sorted
            </summary>
        </member>
        <member name="M:Seal.Model.ReportElement.GetEnumSortValue(System.String,System.Boolean)">
            <summary>
            Get the sort value for an enumerated list
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.FinalSortOrder">
            <summary>
            Final sort order of the element
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.FinalSort">
            <summary>
            Final sort as integer (without ASC or DESC)
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.AggregateFunction">
            <summary>
            Aggregate function applied to the Data element
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.CalculationOption">
            <summary>
            For numeric Data elements, define calculation option applied on the element in the table
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.ShowTotal">
            <summary>
            For Data elements, add a row or a column showing the total of the element in the table. 'Show only total' means that the columns containing the values of the element will be hidden in the table, only the column containing the total of the element is displayed.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.TotalAggregateFunction">
            <summary>
            Aggregate function applied for the totals
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.SerieDefinition">
            <summary>
            Defines how the element is used in the chart. Row or Column elements can be either Axis or Splitter (to create a serie for each splitter value).
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.IsSerie">
            <summary>
            True is the element defines a Serie
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.AxisUseValues">
            <summary>
            For Numeric or Date Time axis, if true, the element values are used for the axis, otherwise axis values are linear. This feature does not work for all types of chart.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.ChartJSSerie">
            <summary>
            Definition of the serie for the element in the Chart JS chart
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.Nvd3Serie">
            <summary>
            Definition of the serie for the element in the NVD3 chart
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.PlotlySerie">
            <summary>
            Definition of the serie for the element in the Plotly chart
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.SerieSortType">
            <summary>
            Defines how the serie is sorted in the chart
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.SerieSortOrder">
            <summary>
            Defines if the serie is sorted ascending or descending in the chart
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.XAxisType">
            <summary>
            Not used (FUTURE). Definition of the X axis of the serie (Primary or Secondary).
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.YAxisType">
            <summary>
            Definition of the Y axis of the serie (Primary or Secondary)
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.MetaColumnGUID">
            <summary>
            GUID of the MetaColumn of the element
            </summary>
        </member>
        <member name="M:Seal.Model.ReportElement.ChangeColumnGUID(System.String)">
            <summary>
            Helper to change the column of the element
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.MetaColumn">
            <summary>
            The MetaColumn of the element
            </summary>
        </member>
        <member name="M:Seal.Model.ReportElement.SetSourceReference(Seal.Model.MetaSource)">
            <summary>
            Change the source of the element, set MetColumn to NULL
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.RawDisplayName">
            <summary>
            Display name of the MetaColumn
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.SQL">
            <summary>
            If not empty, overwrite the default SQL or LINQ Expression used for the element in the SELECT statement
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.CellScript">
            <summary>
            If not empty, the script is executed to calculate custom cell value and CSS
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.NavigationScript">
            <summary>
            Optional Razor Script executed if script navigation links have been added in the CellScript
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.EnumGUIDEL">
            <summary>
            If defined, the enumerated list is used for the display and for sorting
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.ForceAggregate">
            <summary>
            If Yes, it indicates that the element is an aggregate even it is set in a dimension (Page/Row/Column). By default, the metacolumn flag 'Is Aggregate' is used. This flag impacts the build of the GROUP BY Clause.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.SetNullToZero">
            <summary>
            If Yes, empty cells are set to 0.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.ShowAllEnums">
            <summary>
            If Yes, all the values defined in the enumerated list will be shown in the tables, even if the value is not the database Result Set.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.ContainsHtml">
            <summary>
            If True, the value contains HTML tags.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.IsAggregateEl">
            <summary>
            True if the element definition contains already the aggregate
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.IsNotAggregate">
            <summary>
            True is the lement is not an aggregate
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.IsCommonRestrictionValue">
            <summary>
            True is the element is a common restriction
            </summary>
        </member>
        <member name="F:Seal.Model.ReportElement.IsCommonValue">
            <summary>
            True is the element is a common value
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.EnumEL">
            <summary>
            Final enumerated list of the element
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.MetaEnumValuesEL">
            <summary>
            List of values of the element enum
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.RawSQLColumn">
            <summary>
            SQL of the MetaColumn
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.SQLColumn">
            <summary>
            Final SQL of the element
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.SQLColumnName">
            <summary>
            SQL Column name of the element
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.RawLINQColumnName">
            <summary>
            LINQ Select Column name of the element
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.LINQColumnName">
            <summary>
            LINQ Select Column name of the element
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.LINQSelectColumnName">
            <summary>
            LINQ Select Column name of the element
            </summary>
        </member>
        <member name="F:Seal.Model.ReportElement._report">
            <summary>
            Current report
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.Report">
            <summary>
            Current report
            </summary>
        </member>
        <member name="F:Seal.Model.ReportElement._model">
            <summary>
            Current model
            </summary>
        </member>
        <member name="P:Seal.Model.ReportElement.Model">
            <summary>
            Current model
            </summary>
        </member>
        <member name="F:Seal.Model.ReportElement.IsForNavigation">
            <summary>
            True if navigation occured
            </summary>
        </member>
        <member name="M:Seal.Model.ReportElement.GetD3Format(System.Globalization.CultureInfo,System.String)">
            <summary>
            D3 Format for a charts
            </summary>
        </member>
        <member name="M:Seal.Model.ReportElement.GetMomentJSFormat(System.Globalization.CultureInfo)">
            <summary>
            Moment JS Format for the chart
            </summary>
        </member>
        <member name="M:Seal.Model.ReportElement.GetExcelFormat(System.Globalization.CultureInfo)">
            <summary>
            Excel Format of the element
            </summary>
        </member>
        <member name="T:Seal.Model.ReportExecution">
            <summary>
            Main worker class that handles a report execution and rendering.
            </summary>
        </member>
        <member name="F:Seal.Model.ReportExecution.Report">
            <summary>
            Current report being executed
            </summary>
        </member>
        <member name="F:Seal.Model.ReportExecution.RootReport">
            <summary>
            Root report when navigation has occured
            </summary>
        </member>
        <member name="F:Seal.Model.ReportExecution.NavigationParameter">
            <summary>
            The parameter used if the execution was for a navigation
            </summary>
        </member>
        <member name="F:Seal.Model.ReportExecution.Tag">
            <summary>
            Object that can be used at run-time for any purpose
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.Render">
            <summary>
            Render the report and returns the result
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.RenderResult">
            <summary>
            Render the report result and convert it if necessary in Excel or PDF format
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.RenderHTMLDisplay">
            <summary>
            Render only the HTML result for display 
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.RenderHTMLDisplayForViewer">
            <summary>
            Render the HTML display for the Web Server
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.Execute">
            <summary>
            Execute the current report
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.SetError(System.String,System.Object[])">
            <summary>
            Add an execution error
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.SetRestrictions(Seal.Model.Report,Seal.Model.ReportRestriction,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Set restriction values from input 1,2,3,4
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.CheckInputRestrictions">
            <summary>
            Check the current input restriction values
            </summary>
        </member>
        <member name="F:Seal.Model.ReportExecution._runningModels">
            <summary>
            List of models being executed
            </summary>
        </member>
        <member name="F:Seal.Model.ReportExecution._runningSubTables">
            <summary>
            List of No SQL subtables being executed
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.GetReportModelsToExecute">
            <summary>
            List of models to execute after cleaning of models involved in View Restrictions
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.LoadResultTableModel(Seal.Model.ReportModel)">
            <summary>
            Load the result table of a report model
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.BuildResultPagesModel(Seal.Model.ReportModel)">
            <summary>
            Build the result pages of a report model
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.GetScheduledReport(Microsoft.Win32.TaskScheduler.TaskFolder,System.String,System.String,System.String,Seal.Model.Repository)">
            <summary>
            Return the report of a given schedule GUID
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.GetReportSchedule(Microsoft.Win32.TaskScheduler.TaskFolder,Seal.Model.Report,System.String)">
            <summary>
            Return the report of a given schedule GUID
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.ExecuteReportSchedule(System.String,Seal.Model.Report,Seal.Model.ReportSchedule)">
            <summary>
            Execute a report schedule
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.GenerateHTMLResult">
            <summary>
            Generate the HTML result of the current execution
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.GenerateCSVResult">
            <summary>
            Generate the CSV result of the current execution
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.GeneratePrintResult">
            <summary>
            Generate the HTML Print result of the current execution
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.GeneratePDFResult">
            <summary>
            Generate the PDF result of the current execution
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.GenerateExcelResult">
            <summary>
            Generate the Excel result of the current execution
            </summary>
        </member>
        <member name="F:Seal.Model.ReportExecution.CurrentEnumValues">
            <summary>
            Dynamic enum values selected during the report execution
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.UpdateEnumValues(System.String,System.String)">
            <summary>
            Update the current selected enum values during the report execution
            </summary>
        </member>
        <member name="M:Seal.Model.ReportExecution.GetEnumValues(System.String,System.String)">
            <summary>
            Return the new enum values with a filter applied
            </summary>
        </member>
        <member name="T:Seal.Model.ReportModel">
            <summary>
            A ReportModel defines how to generate the Result Set (Data Table) and Series from the database.
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.Create">
            <summary>
            Creates a default report model
            </summary>
            <returns></returns>
        </member>
        <member name="P:Seal.Model.ReportModel.SourceGUID">
            <summary>
            The source used to build the model
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.ConnectionGUID">
            <summary>
            The connection used to build the model
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.Connection">
            <summary>
            The current MetaConnection of the model
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.CommonRestrictions">
            <summary>
            List of common restrictions and values involved in the model. Common Restrictions or Values are defined in the SQL (Pre, Post, Table SQL, Where Clause, etc.) with the '{CommonRestriction_' or '{CommonValue_' keywords (e.g. {CommonRestriction_Amount} to create a common restriction named 'Amount')
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.PreLoadScript">
            <summary>
            Optional Razor Script to modify the result table of the model just before the database load
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.LINQQueryScript">
            <summary>
            If not empty, overwrites default query script template used to generate the LINQ query
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.LoadScript">
            <summary>
            The Razor Script used to load the data in the table. If empty, the load script defined in the master table is used.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.SubModelsSetRestr">
            <summary>
            If true, restrictions and theirs values defined for the LINQ model are automatically copied to the sub-models.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.SubModelsSetAggr">
            <summary>
            If true, aggregates are copied to sub-models elements, otherwise the sub-models elements have no aggregate. This may impact the final performances and results (especially for Count or Average aggregates). 
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.FinalScript">
            <summary>
            Optional Razor Script to modify the model after its generation
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.ExecutionSet">
            <summary>
            During the models generation, the models of the same Set Number are generated in parallel at the same time. The models with Set 1 are executed first at the same time, then models with Set 2, etc. This can be used if models depends on other models.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.ShareResultTable">
            <summary>
            If true and several models have the same SQL or Script definiton, one result table is generated and shared for those models (Optimization).
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.PrintQuery">
            <summary>
            If true, the query is printed in the report messages (for debug purpose).
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.ShowFirstLine">
            <summary>
            If true and the table has column values, the first line used for titles is generated in the table header
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.Alias">
            <summary>
            Alias name used for the table defining the select
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.KeepColNames">
            <summary>
            If true, the column names of the source a kept when building the metadata columns
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.UseRawSQL">
            <summary>
            If true, the raw source SQL is used to generate the result table instead of using a 'select * from (Source SQL) a' statement. In this case, aggregations, restrictions and custom SQL are not applied
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.SqlSelect">
            <summary>
            If not empty, overwrite the SELECT clause in the generated SQL statement (e.g 'SELECT TOP 10', 'SELECT')
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.SqlFrom">
            <summary>
            If not empty, overwrite the FROM clause in the generated SQL statement
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.SqlGroupBy">
            <summary>
            If not empty, overwrite the GROUP BY clause in the generated SQL statement
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.SqlOrderBy">
            <summary>
            If not empty, overwrite the ORDER BY clause in the generated SQL statement
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.SqlCTE">
            <summary>
            If not empty, overwrite the CTE (Common Table Expressions) clause in the generated SQL statement
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.PreSQL">
            <summary>
            SQL Statement executed before the main query. The statement may contain Razor script if it starts with '@'.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.PostSQL">
            <summary>
            SQL Statement executed after the main query. The statement may contain Razor script if it starts with '@'.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.IgnorePrePostError">
            <summary>
            If true, errors occuring during the Pre or Post SQL statements are ignored and the execution continues
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.BuildTimeout">
            <summary>
            Timeout in milliseconds to set the maximum duration used to build the SQL (may be used if many joins are defined)
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.JoinsToUse">
            <summary>
            List of Joins used to perform the query and joins the tables involved. By default, all Joins available in the Data Source are used.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.JoinsToSelect">
            <summary>
            Helper to select Join preferences
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.HelperViewJoins">
            <summary>
            Helper to view joins evaluated for the model
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.LINQSubModels">
            <summary>
            List of SQL Sub-models involved in a LINQ Model 
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.LINQSubTables">
            <summary>
            List of SQL Sub-tables involved in a LINQ Model 
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.Source">
            <summary>
            Current report source
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.MasterModel">
            <summary>
            Master model if the model is a sub-model for LINQ source
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.HasSerie">
            <summary>
            True if the model has series defined
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.HasSubTotals">
            <summary>
            True if the model has subtotals
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.HasPrimaryYAxis">
            <summary>
            True if the model has a primary axis for a serie
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.HasSecondaryYAxis">
            <summary>
            True if the model has a secondary axis for a serie
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.HasNVD3Serie">
            <summary>
            True if the model has a NVD3 serie
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.HasChartJSSerie">
            <summary>
            True if the model has a Chart JS serie
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.HasPlotlySerie">
            <summary>
            True if the model has a Plotly serie
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.HasTotals">
            <summary>
            True if the model has totals
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.HasCellScript">
            <summary>
            True if the model has cell script defined for one of its element
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.Elements">
            <summary>
            Elements selected for the model
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.GetElements(Seal.Model.PivotPosition)">
            <summary>
            List of elements per position
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.GetXElements(Seal.Model.AxisType)">
            <summary>
            List of elements per type of axis
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.GetSplitterElements(Seal.Model.AxisType)">
            <summary>
            List of splitter elements per axis type
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.CheckSortOrders">
            <summary>
            Force sort orders on Page elements
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.Restriction">
            <summary>
            The restriction text of the model
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.Restrictions">
            <summary>
            List of restrictions of the model
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.AggregateRestriction">
            <summary>
            The aggregate restriction text of the model
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.AggregateRestrictions">
            <summary>
            List of aggregate restrictions of the model
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.Table">
            <summary>
            Table definition for a SQL Model
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.RefreshMetaTable(System.Boolean)">
            <summary>
            Initialize the MetaTable for a SQL Model 
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.IsSQLModel">
            <summary>
            True is it is a SQL Model (not standard based on the metadata)
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.IsLINQ">
            <summary>
            True is it is a Model based on a LINQ source
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.IsSubModel">
            <summary>
            True is it is a Sub-Model used for a LINQ Query
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.Sql">
            <summary>
            SELECT Sql used for the model
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.LINQSelect">
            <summary>
            LINQ SELECT used for the model
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.LINQLoadScript">
            <summary>
            Default LINQ Load Script used for the model
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.FromTables">
            <summary>
            List of tables involved in the model
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.RestrictionText">
            <summary>
            Display text for the restrictions of the model
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecutionDate">
            <summary>
            Execution date of the model
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecutionDuration">
            <summary>
            Execution duration of the model
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ResultTable">
            <summary>
            Result DataTable got from the SQL query
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.Progression">
            <summary>
            Progression in percentage of the model processing
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.SummaryTable">
            <summary>
            Summary Table generated after the model execution (only if Page element are defined in the model)
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.Pages">
            <summary>
            List of Pages generated after the model execution (one page per Page element values)
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecutionError">
            <summary>
            Error messages during execution
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecChartIsNumericAxis">
            <summary>
            True if chart is numeric axis
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecChartIsDateTimeAxis">
            <summary>
            True if chart is date time axis
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecAxisPrimaryYIsDateTime">
            <summary>
            True if chart primary axis is date time
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecAxisSecondaryYIsDateTime">
            <summary>
            True if chart secondary axis is date time
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecD3PrimaryYAxisFormat">
            <summary>
            Format for D3 primary chart axis
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecD3SecondaryYAxisFormat">
            <summary>
            Format for D3 secondary chart axis
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecD3XAxisFormat">
            <summary>
            Format for D3 chart X axis
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecMomentJSXAxisFormat">
            <summary>
            Format for Moment JS chart X axis
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecNVD3ChartType">
            <summary>
            NVD3 chart type
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecPlotlyChartType">
            <summary>
            Plotly chart type
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecChartJSType">
            <summary>
            Chart JS type
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecResultTableLoaded">
            <summary>
            True if the source result table has been loaded
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecResultPagesBuilt">
            <summary>
            True if the result pages have been built
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.CheckNVD3ChartIntegrity">
            <summary>
            Check NVD3 Chart and set the ExecNVD3ChartType property
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.CheckPlotlyChartIntegrity">
            <summary>
            Check Plotly Chart and set the ExecPlotlyChartType property
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.CheckChartJSIntegrity">
            <summary>
            Check ChartJS and set the ExecChartJSType property
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.ExecutionRestrictions">
            <summary>
            List of restrictions of the model
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.ExecutionAggregateRestrictions">
            <summary>
            List of aggregate restrictions of the model
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.ExecutionCommonRestrictions">
            <summary>
            List of Common Restrictions of the model
            </summary>
        </member>
        <member name="P:Seal.Model.ReportModel.AllExecutionRestrictions">
            <summary>
            List of all restrictions of the model (including aggregate and common restrictions)
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.execSelect">
            <summary>
            Full SQL Select generated at execution
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.execSelectClause">
            <summary>
            SELECT Clause generated at execution
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.execCTEClause">
            <summary>
            CTE Clause generated at execution
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.execFromClause">
            <summary>
            FROM Clause generated at execution
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.execWhereClause">
            <summary>
            WHERE Clause generated at execution
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.execOrderByClause">
            <summary>
            ORDER BY Clause generated at execution
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.execOrderByNameClause">
            <summary>
            ORDER BY NAME Clause generated at execution (used for No SQL Source)
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.execGroupByClause">
            <summary>
            GROUP BY Clause generated at execution
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.execHavingClause">
            <summary>
            HAVING Clause generated at execution
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.Tag">
            <summary>
            Custom Tag the can be used at execution time to store any object
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.Tag2">
            <summary>
            Custom Tag the can be used at execution time to store any object
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.Tag3">
            <summary>
            Custom Tag the can be used at execution time to store any object
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.InitReferences">
            <summary>
            Init all model references: Elements, Restrictions, etc.
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.ParseCommonRestrictions(System.String)">
            <summary>
            Parse and replace Common Restrictions in SQL by their values
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.ClearCommonRestrictions(System.String)">
            <summary>
            Clear Common Restrictions from a SQL
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.InitCommonRestrictions">
            <summary>
            Init all Common Restrictions of the model and build the CommonRestrictions property
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.ClearLostElements">
            <summary>
            Delete elements and restrictions with no source reference
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.SetColumnsName">
            <summary>
            Set column names for the elements before building the SQL
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.AddSubReportsElements">
            <summary>
            Add Sub-Reports elements to the SQL
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.JoinPaths">
            <summary>
            Description of the joins chosen to build the SQL
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.BuildQuery(System.Boolean,System.Boolean)">
            <summary>
            Build the SQL for the model
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.UpdateFinalSortOrders">
            <summary>
            Update the final sort orders
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.CancelCommand">
            <summary>
            Cancel the model execution
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.ExecuteLoadScript(System.String,System.String,System.Object)">
            <summary>
            Execute custom Razor script for the model: Pre Load, Post Load and Final
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecTableJoins">
            <summary>
            Current list of tables used for the join
            </summary>
        </member>
        <member name="F:Seal.Model.ReportModel.ExecResultTables">
            <summary>
            Current list of result tables for the model execution
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.FillResultTableAsync(System.Collections.Generic.Dictionary{System.String,Seal.Model.ReportModel},System.Collections.Generic.Dictionary{System.String,Seal.Model.MetaTable})">
            <summary>
            Build the ResultTable for the model
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.EnumDisplayValue(Seal.Model.MetaEnum,System.String,System.Boolean)">
            <summary>
            Translate the enum using the Enum context
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.InvertDataTables">
            <summary>
            Invert the rows and the columns of all DataTables of the pages generated
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.GetRestrictionByName(System.String)">
            <summary>
            Returns a model restriction from its name
            </summary>
        </member>
        <member name="M:Seal.Model.ReportModel.GetNavigation(Seal.Model.ReportView,Seal.Model.ResultCell,System.Boolean)">
            <summary>
            HTML Navigation for the report result
            </summary>
        </member>
        <member name="T:Seal.Model.ReportRestriction">
            <summary>
            A ReportRestriction defines a restriction applied to a report model. A report restriction is a child of a ReportElement.
            </summary>
        </member>
        <member name="M:Seal.Model.ReportRestriction.UpdateEditorAttributes">
            <summary>
            Update editor attributes in the property grid
            </summary>
        </member>
        <member name="M:Seal.Model.ReportRestriction.ToString">
            <summary>
            Name of the restriction
            </summary>
            <returns></returns>
        </member>
        <member name="F:Seal.Model.ReportRestriction.kStartRestrictionChar">
            <summary>
            Start character of a restriction
            </summary>
        </member>
        <member name="F:Seal.Model.ReportRestriction.kStopRestrictionChar">
            <summary>
            Stop character of a restriction
            </summary>
        </member>
        <member name="M:Seal.Model.ReportRestriction.CreateReportRestriction">
            <summary>
            Create a default report restriction
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.Prompt">
            <summary>
            Define if the value of the restriction is prompted to the user when the report is executed
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.Operator">
            <summary>
            The Operator used for the restriction. If Value Only is selected, the restriction is replaced by the value only (with no column name and operator).
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.OperatorLabel">
            <summary>
            If not empty, overwrite the operator display text
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.OperatorStyle">
            <summary>
            How the element name and restriction operator is displayed or not.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.ShowName">
            <summary>
            Control of the OperatorStyle dedicated for Input Values or Common Restrictions
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.Required">
            <summary>
            If true and the restriction is prompted, a value is required to execute the report
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.DisplayOrderRE">
            <summary>
            Sort order used for the display of the prompted restrictions when the report is executed.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.EnumRE">
            <summary>
            The final enumerated list of the restriction
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.MetaEnumValuesRE">
            <summary>
            List of values of the restriction enum
            </summary>
        </member>
        <member name="M:Seal.Model.ReportRestriction.SetEnumHtmlIds">
            <summary>
            Initialize the Html Ids of the enum values of the restriction
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.PromptedEnumValues">
            <summary>
            List of prompted enum values
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.IsNoSQL">
            <summary>
            True if the source is No SQL
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.IsInputValue">
            <summary>
            True if the restriction is an input value
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.IsEnumRE">
            <summary>
            True is the restriction is an enumerated list
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.InputRows1">
            <summary>
            Number of lines for the first input
            </summary>
        </member>
        <member name="M:Seal.Model.ReportRestriction.GetOperatorLabel(Seal.Model.Operator)">
            <summary>
            Operator label translated
            </summary>
        </member>
        <member name="M:Seal.Model.ReportRestriction.CheckInputValue(System.String)">
            <summary>
            Check an input value, throw an exception in case of error
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Seal.Model.ReportRestriction.SetNavigationValue(System.String)">
            <summary>
            Set a restriction value for navigation
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.AllowedOperators">
            <summary>
            List of allowed operators for this restriction
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.AllowedDisplayOperators">
            <summary>
            List of operators to display
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.Value1">
            <summary>
            Value used for the restriction. Multiple values can be set (one per line).
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.Value2">
            <summary>
            Second value used for the restriction
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.Value3">
            <summary>
            Third value used for the restriction
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.Value4">
            <summary>
            Fourth value used for the restriction
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.DoubleValue">
            <summary>
            Value as a double?
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.FirstValue">
            <summary>
            First restriction value
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.FirstStringValue">
            <summary>
            First string value
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.FirstNumericValue">
            <summary>
            First numeric value
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.FirstDateValue">
            <summary>
            First Date Time value
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.EnumValues">
            <summary>
            Enumerated values for the restriction
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.EnumValue">
            <summary>
            Helper to edit the enumerated values
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.Date1">
            <summary>
            Value used for the restriction (DateTime)
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.Date2">
            <summary>
            Second value used for the restriction (DateTime)
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.Date3">
            <summary>
            Third value used for the restriction (DateTime)
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.Date4">
            <summary>
            Fourth value used for the restriction (DateTime)
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.Date1Keyword">
            <summary>
            Date1 Keyword value
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.Date2Keyword">
            <summary>
            Date2 Keyword value
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.Date3Keyword">
            <summary>
            Date3 Keyword value
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.Date4Keyword">
            <summary>
            Date4 Keyword value
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.EnumLayout">
            <summary>
            Layout of the restriction for the values of the enumerated list: Either a select list or buttons (for a small number of values).
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.FirstSelection">
            <summary>
            If set, the values are selected for the first report execution: All values, first or last value. This may be used for dynamic list.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.TriggerExecution">
            <summary>
            If set, the values are selected for the first report execution: All values, first or last value. This may be used for dynamic list.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.SQL">
            <summary>
            If not empty, overwrite the default SQL used for the restriction in the WHERE clause
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.TypeRe">
            <summary>
            Data type of the restriction
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.DateTimeStandardFormatRe">
            <summary>
            Standard display format applied to the restriction display value
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.NumericStandardFormatRe">
            <summary>
            Standard display format applied to the restriction display value
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.FormatRe">
            <summary>
            If not empty, specify the format of the restriction display values (.Net Format Strings)
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.InputRows">
            <summary>
            If greater than 0, specifies the number of lines available to edit the first restriction value (only valid for text or numeric when the restriction is prompted)
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.EnumGUIDRE">
            <summary>
            If defined, the restriction values are selected using the enumerated list
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.CaseSensitive">
            <summary>
            If True, the restriction text is case sensitive in the LINQ where clause.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.AllowAPI">
            <summary>
            If True, the restriction can be modified through the Web API, even if the restriction is not prompted.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.HasValue">
            <summary>
            True if the restriction has a value
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.HasValue1">
            <summary>
            True if the restriction has a value 1
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.HasValue2">
            <summary>
            True if the restriction has a value 2
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.HasValue3">
            <summary>
            True if the restriction has a value 3
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.HasValue4">
            <summary>
            True if the restriction has a value 4
            </summary>
        </member>
        <member name="M:Seal.Model.ReportRestriction.HasDateKeyword(System.String)">
            <summary>
            Helper to find if a string has a date keyword
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.FinalDate1">
            <summary>
            Final Date Time value 1
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.FinalDate2">
            <summary>
            Final Date Time value 2
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.FinalDate3">
            <summary>
            Final Date Time value 3
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.FinalDate4">
            <summary>
            Final Date Time value 4
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.EnumDisplayValue">
            <summary>
            String containing all the enumerated values with their display labels
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.DisplayValue1">
            <summary>
            Final display value 1
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.DisplayValue2">
            <summary>
            Final display value 2
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.DisplayValue3">
            <summary>
            Final display value 3
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.DisplayValue4">
            <summary>
            Final display value 4
            </summary>
        </member>
        <member name="M:Seal.Model.ReportRestriction.GetDisplayValue(System.String,System.DateTime)">
            <summary>
            Helper to return the display value
            </summary>
        </member>
        <member name="M:Seal.Model.ReportRestriction.GeNavigationDisplayValue">
            <summary>
            Display value for navigation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Seal.Model.ReportRestriction.GetEnumDisplayValue(System.String)">
            <summary>
            Helper to return the display value of an enum from its id
            </summary>
        </member>
        <member name="M:Seal.Model.ReportRestriction.GetEnumMessage">
            <summary>
            Enum message defined in the MetaData
            </summary>
            <returns></returns>
        </member>
        <member name="P:Seal.Model.ReportRestriction.IsGreaterSmallerOperator">
            <summary>
            True is the operastor is Greater or Smaller
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.IsContainOperator">
            <summary>
            True is the operastor is Contain (or Not),Starts, Ends
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.IsBetweenOperator">
            <summary>
            True is the operator is Between (or Not)
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.EnumSQLValue">
            <summary>
            String containing the SQL values of the enum values
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.EnumLINQValue">
            <summary>
            String containing the LINQ values of the enum values
            </summary>
        </member>
        <member name="M:Seal.Model.ReportRestriction.GetVals(System.String)">
            <summary>
            Array of string from a value having CR/LF
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.DisplayRestriction">
            <summary>
            Display text of the restriction (value only)
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.DisplayRestrictionForEditor">
            <summary>
            Display text of the restriction (for editor)
            </summary>
        </member>
        <member name="F:Seal.Model.ReportRestriction.IsViewRestriction">
            <summary>
            True is the restriction is for a restriction view
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.DisplayText">
            <summary>
            Display text of the full restriction (label and value)
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.SQLText">
            <summary>
            SQL of the restriction 
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.LINQText">
            <summary>
            LINQ of the restriction 
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.OperatorHtmlId">
            <summary>
            Html identifier for the restriction operator
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.ValueHtmlId">
            <summary>
            Html identifier for the restriction value
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.OptionValueHtmlId">
            <summary>
            Html identifier for the restriction option value (for enumerated list)
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.OptionHtmlId">
            <summary>
            Html identifier for the restriction option (for enumerated list)
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.HtmlIndex">
            <summary>
            Helper to build the HTML index
            </summary>
        </member>
        <member name="F:Seal.Model.ReportRestriction.ValidationErrors">
             <summary>
            Validation errors set during the execution
             </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.HasTimeRe">
            <summary>
            True if the restriction has time
            </summary>
        </member>
        <member name="P:Seal.Model.ReportRestriction.InputDateFormat">
            <summary>
            Input date time format for the restriction
            </summary>
        </member>
        <member name="M:Seal.Model.ReportRestriction.GetHtmlValue(System.Int32,System.Boolean)">
            <summary>
            HTML value of the restriction for index 1,2,3 or 4
            </summary>
        </member>
        <member name="M:Seal.Model.ReportRestriction.IsIdenticalForPrompt(Seal.Model.ReportRestriction)">
            <summary>
            True if the restriction is consider as identical for prompt: only one restriction will be generated in the report
            Same name and same source column
            </summary>
        </member>
        <member name="M:Seal.Model.ReportRestriction.CopyForPrompt(Seal.Model.ReportRestriction)">
            <summary>
            Copy restriction property from another prompted restriction
            </summary>
            <param name="restriction"></param>
        </member>
        <member name="T:Seal.Model.ReportView">
            <summary>
            A ReportView defines how a ReportModel is rendered.
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.Create(Seal.Model.ReportViewTemplate)">
            <summary>
            Creates a basic view
            </summary>
            <param name="template"></param>
            <returns></returns>
        </member>
        <member name="M:Seal.Model.ReportView.InitReferences">
            <summary>
            Init all references
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.InitParameters(System.Collections.Generic.List{Seal.Model.Parameter},System.Collections.Generic.List{Seal.Model.Parameter},System.Boolean)">
            <summary>
            Init the view parameters from the configuration
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.BeforeSerialization">
            <summary>
            Operations performed before the serialization
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.AfterSerialization">
            <summary>
            Operations performed after the serialization
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.ReloadConfiguration">
            <summary>
            Forces the reload of the configuration
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.InitParameters(System.Boolean)">
            <summary>
            Init all parameters with an option to reset their values
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.AddDefaultModelViews">
            <summary>
            Add the default children for a model
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.HasValue(System.String)">
            <summary>
            True, if the parameter has a value 
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.GetValue(System.String)">
            <summary>
            Returns the parameter value
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.GetValueIfNotEmpty(System.String,System.String,System.String)">
            <summary>
            Returns the parameter value if not empty with a prefix and a suffix
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.GetValueOrDefault(System.String)">
            <summary>
            Returns the parameter value or the configuration value if it does not exist
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.AddAttribute(System.String,System.String)">
            <summary>
            Helper to create an HTTP attribute from a parameter value
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.ChartTitle">
            <summary>
            Current chart title
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.GetTranslatedMappedLabel(System.String)">
            <summary>
            Translates a mapped label having keywords %DisplayName%
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.ReplaceInParameterValues(System.String,System.String,System.String)">
            <summary>
            Replace a pattern by a text in the parameter values
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.GetParameter(System.String)">
            <summary>
            Returns a Parameter
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.SetParameter(System.String,System.String)">
            <summary>
            Set a parameter value
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.SetParameter(System.String,System.Boolean)">
            <summary>
            Set a parameter boolean value
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.GetHtmlValue(System.String)">
            <summary>
            Returns a parameter value with HTML encoding
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.GetBoolValue(System.String)">
            <summary>
            Returns a parameter boolean value
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.GetBoolValueJS(System.String)">
            <summary>
            Returns a parameter boolean value for JavaScript
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.GetBoolValue(System.String,System.Boolean)">
            <summary>
            Returns a parameter boolean value with a default if it does not exist
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.GetNumericValue(System.String)">
            <summary>
            Returns a paramter ineteger value
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.IsRootView">
            <summary>
            True if the view is the root view (no parent)
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.IsAncestorOf(Seal.Model.ReportView)">
            <summary>
            True if the view is an ancestor of a given view
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.ReportViewTemplateChildren">
            <summary>
            Retruns the view templates that can be child of the view
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.IsDrillEnabled">
            <summary>
            True if the drill navigation is enabled
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.IsSubReportsEnabled">
            <summary>
            True if the sub-reports navigation is enabled
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.ViewName">
            <summary>
            View name translated
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.TemplateName">
            <summary>
            The name of the view template. View templates are defined in the repository Views folder.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.TemplateDescription">
            <summary>
            The description of the template
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.ModelGUID">
            <summary>
            The data model identifier used for the view
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.UseModelName">
            <summary>
            If true, the view name is got from the model name. This is only valid for a Model View.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.ShowInMenu">
            <summary>
            If true, the report view is shown and can be executed from the menu of the Web Report Server.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.MenuName">
            <summary>
            If not empty, overrides the default name of the report view in the Web Menu. Sub-menus can be specified using the '/' character (e.g. 'Samples/Orders').
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.RestrictionsGUID">
            <summary>
            List of Restrictions GUID to display for a Restrictions view.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.ExecutionPromptedRestrictions">
            <summary>
            List of restrictions prompted to display in the view
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.RestrictionsToSelect">
            <summary>
            Helper to select Join Preferences
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.ReferenceViewGUID">
            <summary>
            If set, the values of the properties of the view may be taken from the reference view. This apply to parameters having their default value (including Excel and PDF configuration), custom template texts with 'Use custom template text' set to 'false'. 
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.InitPartialTemplates">
            <summary>
            Init the partial templates of the view
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.Template">
            <summary>
            Current ReportViewTemplate
            </summary>
        </member>
        <member name="F:Seal.Model.ReportView.Views">
            <summary>
            Children of the view
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.UseCustomTemplate">
            <summary>
            If true, the template text can be modified
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.CustomTemplate">
            <summary>
            The custom template text used instead of the template defined by the template name
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.PartialTemplates">
            <summary>
            The custom partial template list for the view
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.PartialTemplatesConfiguration">
            <summary>
            The custom partial template texts for the view
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.Parameters">
            <summary>
            The view parameters
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.CultureName">
            <summary>
            The language and culture used to display the report. If empty, the default culture is used.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.TemplateConfiguration">
            <summary>
            The view configuration values for edition.
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.GetSort">
            <summary>
            Current sort order of the view
            </summary>
            <returns></returns>
        </member>
        <member name="P:Seal.Model.ReportView.SortOrder">
            <summary>
            Sort order of the view
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.SortOrderFull">
            <summary>
            Sort order with the view name
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.CultureInfo">
            <summary>
            Current CultureInfo
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.SetAdvancedConfigurations">
            <summary>
            Set configurations for Excel or PDF converter
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.WebExec">
            <summary>
            For the Web Report Server: If true, the view can be executed from the report list.
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.Model">
            <summary>
            Current report model if any
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.ReferenceView">
            <summary>
            Current reference view if any
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.ParentView">
            <summary>
            Current parent view if any
            </summary>
        </member>
        <member name="F:Seal.Model.ReportView.Tag">
            <summary>
            Object that can be used at run-time for any purpose
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.IdSuffix">
            <summary>
            Unique identifier for execution used to build JS identifier (e.g. for datatables)
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.PdfConfigurations">
            <summary>
            The PDF configuration of the view
            </summary>
        </member>
        <member name="F:Seal.Model.ReportView._pdfConverter">
            <summary>
            Current SealPdfConverter
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.PdfConverterEdited">
            <summary>
            True if the PDF Converter was edited
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.ExcelConfigurations">
            <summary>
            The Excel configuration of the view
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.ExcelConverter">
            <summary>
            Current Excel converter
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.ExcelConverterEdited">
            <summary>
            True if the Excel converter was edited
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.ConvertToExcel(System.String)">
            <summary>
            Convert the view to an Excel Sheet
            </summary>
            <param name="destination"></param>
            <returns></returns>
        </member>
        <member name="P:Seal.Model.ReportView.HelperReloadConfiguration">
            <summary>
            Editor Helper: Load the template configuration file
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.HelperResetParameters">
            <summary>
            Editor Helper: Reset all template parameters to their default values
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.HelperResetPDFConfigurations">
            <summary>
            Editor Helper: Reset PDF configuration values to their default values
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.HelperResetExcelConfigurations">
            <summary>
            Editor Helper: Reset Excel configuration values to their default values
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.Information">
            <summary>
            Last information message
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.Error">
            <summary>
            Last error message
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.ViewTemplateText">
            <summary>
            Current template text of the view
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.ViewId">
            <summary>
            Identifier of the view
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.GetPartialTemplateKey(System.String,System.Object)">
            <summary>
            Returns a partial template key form a given name and model
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.Parse">
            <summary>
            Parse the view and returns the result
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.ParseChildren">
            <summary>
            Parse all children and returns the result
            </summary>
            <returns></returns>
        </member>
        <member name="M:Seal.Model.ReportView.GetGridLayoutRows(System.String)">
            <summary>
            Helper to return a list of layout rows from the grid layout
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.GetGridLayoutColumns(System.String)">
            <summary>
            Helper to return a list of layout columns from a layout row
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.GetGridLayoutColumnClass(System.String)">
            <summary>
            Returns the class of a layout column
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.IsGridLayoutColumnForModel(System.String)">
            <summary>
            True if the layout column is for a model
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.InitTemplates(Seal.Model.ReportView,System.String@)">
            <summary>
            Initializes the view templates and parameters
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.InitFromReferenceView">
            <summary>
            Initializes the view properties from its reference view
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.InitPageChart(Seal.Model.ResultPage)">
            <summary>
            Init the chart for a ResultPage
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.GetView(System.String)">
            <summary>
            Returns a view from its identifier
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.ModelView">
            <summary>
            Returns the first ancestor view having a model
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.RootView">
            <summary>
            Helper to get the root view of the view
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.ReinitGUIDChildren">
            <summary>
            Reset children identifiers
            </summary>
        </member>
        <member name="M:Seal.Model.ReportView.IsColumnHidden(System.Int32)">
            <summary>
            True if the column is hidden
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.MenuPath">
            <summary>
            Path of the view in the menu
            </summary>
        </member>
        <member name="P:Seal.Model.ReportView.MenuReportViewName">
            <summary>
            Name of the report in the menu
            </summary>
        </member>
        <member name="T:Seal.Model.Repository">
            <summary>
            The Repository class defines all the default values, configurations and security of the application and contains the current MetaSource and OutputDevice objects .
            </summary>
        </member>
        <member name="F:Seal.Model.Repository.RepositoryConfigurationPath">
            <summary>
            Repository path got from the configuration file
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.RepositoryPath">
            <summary>
            Current path
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.ProductVersion">
            <summary>
            Product version
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.ProductIcon">
            <summary>
            Product icon
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.LicenseText">
            <summary>
            License text
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.Sources">
            <summary>
            List of MetaSource in the repository
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.Devices">
            <summary>
            List of OutputDevice in the repository
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.CultureInfo">
            <summary>
            Default CultureInfo
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.MomentJSShortDateFormat">
            <summary>
            Short Date format for MomentJS
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.MomentJSShortDateTimeFormat">
            <summary>
            Short Date Time format for MomentJS
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.SetCultureInfo(System.String)">
            <summary>
            Set culture from a name, returns true if the change is done.
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.Configuration">
            <summary>
            Current configuration
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.UseWebScheduler">
            <summary>
            True if the Seal Scheduler is used instead of the Windows Tasks Scheduler
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.ReloadConfiguration">
            <summary>
            Forces a configuration reload
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.Security">
            <summary>
            Current security
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.ReloadSecurity">
            <summary>
            Forces a security reload for Web
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.FindRepository">
            <summary>
            Find the current repository path (normally defined in the .config file)
            </summary>
            <returns></returns>
        </member>
        <member name="P:Seal.Model.Repository.Instance">
            <summary>
            A general static instance of the repository
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.ReloadInstance">
            <summary>
            Force a reload of the repository Instance
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.Create">
            <summary>
            Creates a basic repository
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.CreateFast">
            <summary>
            Creates a basic repository: properties are shared or cloned for performance reasons
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.Init(System.String)">
            <summary>
            Init the repository from a given path
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.MustReload">
            <summary>
            True if the configuration or security file has been modified
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.CheckFolders">
            <summary>
            Check repository folders and create them if necessary
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.ViewsFolder">
            <summary>
            Views folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.SourcesFolder">
            <summary>
            Sources folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.TableTemplatesFolder">
            <summary>
            Table templates folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.DevicesFolder">
            <summary>
            Devices folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.DevicesEmailFolder">
            <summary>
            Devices Email folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.DevicesFileServerFolder">
            <summary>
            Devices File Server folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.SettingsFolder">
            <summary>
            Settings folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.SecurityFolder">
            <summary>
            Security folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.SecurityProvidersFolder">
            <summary>
            Security Providers folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.ReportsFolder">
            <summary>
            Reports folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.LogsFolder">
            <summary>
            Logs folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.ViewImagesFolder">
            <summary>
            View Images folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.ViewScriptsFolder">
            <summary>
            View Scripts folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.ViewContentFolder">
            <summary>
            View Content folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.AssembliesFolder">
            <summary>
            Assemblies folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.SealConverterPath">
            <summary>
            SealConverter assembly path
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.SubReportsFolder">
            <summary>
            SubReports folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.SpecialsFolder">
            <summary>
            SpecialFolders folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.PersonalFolder">
            <summary>
            SpecialsFolder Personal folder
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.SchedulesFolder">
            <summary>
            SpecialsFolder Schedules folder
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.GetPersonalFolder(Seal.Model.SecurityUser)">
            <summary>
            Returns the personal folder path of a user
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.GetPersonalFolderName(Seal.Model.SecurityUser)">
            <summary>
            Returns the personal folder name of a user
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.TranslationsPattern">
            <summary>
            Translations file name pattern
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.RepositoryTranslationsPath">
            <summary>
            Repository translations file name
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.ConfigurationPath">
            <summary>
            Configuration file path
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.SecurityPath">
            <summary>
            Security file path
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.ReplaceRepositoryKeyword(System.String)">
            <summary>
            Replace the repository keywords in a string
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.Translations">
            <summary>
            Current translations
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.JSTranslations">
            <summary>
            Current JavaScript translations
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.NVD3Translations">
            <summary>
            Current NVD3 translations (for NVD3 charts)
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.Translate(System.String,System.String)">
            <summary>
            Translate a reference text in a context
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.TranslateWeb(System.String)">
            <summary>
            Translate a reference text in a Web context
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.TranslateWebJS(System.String)">
            <summary>
            Translate a reference text in a WebJS context
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.TranslateReport(System.String)">
            <summary>
            Translate a reference text in a Report context
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.TranslateReportToJS(System.String)">
            <summary>
            Translate a reference text in a Report context for JavaScript use
            </summary>
        </member>
        <member name="P:Seal.Model.Repository.RepositoryTranslations">
            <summary>
            Current repository translations
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.RepositoryTranslate(System.String,System.String,System.String,System.String)">
            <summary>
            Translate a reference text in a repository context
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.RepositoryTranslate(System.String,System.String,System.String)">
            <summary>
            Translate a reference text in a repository context with the current culture
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.TranslateColumn(Seal.Model.MetaColumn)">
            <summary>
            Translate an Element
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.TranslateCategory(System.String,System.String)">
            <summary>
            Translate a Category
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.TranslateDevice(System.String,System.String)">
            <summary>
            Translate a Device
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.TranslateFolderPath(System.String)">
            <summary>
            Translate a full Folder Path
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.TranslateFolderName(System.String)">
            <summary>
            Translate a Folder^Name
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.TranslateFileName(System.String)">
            <summary>
            Translate a column name
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.Translate(System.String,System.String,System.String)">
            <summary>
            Translate a reference text
            </summary>
        </member>
        <member name="M:Seal.Model.Repository.FindReport(System.String,System.String)">
            <summary>
            Find and load report form its identifier
            </summary>
        </member>
        <member name="T:Seal.Model.ResultCell">
            <summary>
            A ResultCell defines a cell generated in a table after the execution of a report model
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.Value">
            <summary>
            The object value of the cell
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.Element">
            <summary>
            The ReportElement of the element model
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.IsTotal">
            <summary>
            True if the cell is for a total
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.IsTitle">
            <summary>
            True if the cell is for a title
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.IsSubTotal">
            <summary>
            True if the cell is for a sub total
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.IsTotalTotal">
            <summary>
            True if the cell is for the total of totals
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.IsSerie">
            <summary>
            True if the cell is for a serie
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.FinalValue">
            <summary>
            If not empty, the value is used for the cell
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.FinalCssStyle">
            <summary>
            If not empty, the css style is used for the cell
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.FinalCssClass">
            <summary>
            If not empty, the css class is used for the cell
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.Tag">
            <summary>
            Custom Tag the can be used at execution time to store any object
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.DefaultCellCssClass">
            <summary>
            Default Css Class for a cell
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.DefaultNumericCellCssClass">
            <summary>
            Default Css Class for a numeric cell
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.DefaultDateTimeCellCssClass">
            <summary>
            Default Css Class  for a datetime cell
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.DefaultCellCssStyle">
            <summary>
            Default Css Style for a cell
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.DefaultNumericCellCssStyle">
            <summary>
            Default Css Style for a numeric cell
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.DefaultDateTimeCellCssStyle">
            <summary>
            Default Css Style for a datetime cell
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.DefaultTitleCssClass">
            <summary>
            Default Css Class for a title cell
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.DefaultNumericTitleCssClass">
            <summary>
            Default Css Class for a numeric title cell. Default value is 'text-right'
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.DefaultDateTimeTitleCssClass">
            <summary>
            Default Css Class for a datetime title cell. Default value is 'text-right'
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.DefaultTitleCssStyle">
            <summary>
            Default Css Style for a title cell
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.DefaultNumericTitleCssStyle">
            <summary>
            Default Css Style for a numeric title cell. Default value is 'padding-right:25px;'
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.DefaultDateTimeTitleCssStyle">
            <summary>
            Default Css Style for a datetime title cell. Default value is 'padding-right:25px;'
            </summary>
        </member>
        <member name="P:Seal.Model.ResultCell.HTMLValue">
            <summary>
            HTML value of the cell
            </summary>
        </member>
        <member name="M:Seal.Model.ResultCell.CSVValue(System.Boolean,System.String)">
            <summary>
            CSV value of the cell
            </summary>
        </member>
        <member name="P:Seal.Model.ResultCell.DisplayValue">
            <summary>
            Display value of the cell
            </summary>
        </member>
        <member name="P:Seal.Model.ResultCell.RawDisplayValue">
            <summary>
            Display value of the cell without applying the format or translation
            </summary>
        </member>
        <member name="P:Seal.Model.ResultCell.ValueNoHTML">
            <summary>
            Deprecated: Kept for compatibility
            </summary>
        </member>
        <member name="P:Seal.Model.ResultCell.DoubleValue">
            <summary>
            Double value of the cell if possible
            </summary>
        </member>
        <member name="P:Seal.Model.ResultCell.NavigationValue">
            <summary>
            Value used for navigation
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.SubReportValues">
            <summary>
            Values used for sub report navigation
            </summary>
        </member>
        <member name="P:Seal.Model.ResultCell.DateTimeValue">
            <summary>
            Date time value of the cell if possible
            </summary>
        </member>
        <member name="P:Seal.Model.ResultCell.CellCssSummaryClass">
            <summary>
            Css cell class for the summary table
            </summary>
        </member>
        <member name="P:Seal.Model.ResultCell.CellCssPageClass">
            <summary>
            Css cell class for the page table
            </summary>
        </member>
        <member name="P:Seal.Model.ResultCell.CellCssClass">
            <summary>
            Css cell class
            </summary>
        </member>
        <member name="P:Seal.Model.ResultCell.CellCssSummaryStyle">
            <summary>
            Css cell style for summary table
            </summary>
        </member>
        <member name="P:Seal.Model.ResultCell.CellCssPageStyle">
            <summary>
            Css cell style for page table
            </summary>
        </member>
        <member name="P:Seal.Model.ResultCell.CellCssStyle">
            <summary>
            Css cell style
            </summary>
        </member>
        <member name="M:Seal.Model.ResultCell.ShouldSort(System.Collections.Generic.List{Seal.Model.ResultCell[]})">
            <summary>
            Returns true if at least a Sort is specified
            </summary>
        </member>
        <member name="M:Seal.Model.ResultCell.ShouldSort(Seal.Model.ResultCell[])">
            <summary>
            Returns true if at least a Sort is specified
            </summary>
        </member>
        <member name="M:Seal.Model.ResultCell.CompareCells(Seal.Model.ResultCell[],Seal.Model.ResultCell[])">
            <summary>
            Compares 2 cells arrays
            </summary>
        </member>
        <member name="M:Seal.Model.ResultCell.CompareCellsForTableLoad(Seal.Model.ResultCell[],Seal.Model.ResultCell[])">
            <summary>
            Compares 2 cells arrays
            </summary>
        </member>
        <member name="M:Seal.Model.ResultCell.CompareCell(Seal.Model.ResultCell,Seal.Model.ResultCell)">
            <summary>
            Compares 2 cells
            </summary>
        </member>
        <member name="M:Seal.Model.ResultCell.GetNavigationLinks(Seal.Model.ReportView)">
            <summary>
            Retrun the list of navigation links in the View context
            </summary>
        </member>
        <member name="M:Seal.Model.ResultCell.AddNavigationFileDownload(System.String,System.String)">
            <summary>
            Add a navigation link from this cell to download a file. The file will be loaded in the Navigation Script of the model.
            </summary>
        </member>
        <member name="M:Seal.Model.ResultCell.AddNavigationHyperLink(System.String,System.String)">
            <summary>
            Add a navigation link from this cell to open a new page on a web site
            </summary>
        </member>
        <member name="M:Seal.Model.ResultCell.AddNavigationReportNavigation(System.String,System.String,System.String)">
            <summary>
            Add a navigation link from this cell to execute another report within the current navigation context
            </summary>
        </member>
        <member name="M:Seal.Model.ResultCell.AddNavigationReportExecution(System.String,System.String)">
            <summary>
            Add a navigation link from this cell to execute another report in a new window
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.ContextModel">
            <summary>
            For cell script execution: current ReportModel
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.ContextPage">
            <summary>
            For cell script execution: current ResultPage
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.ContextTable">
            <summary>
            For cell script execution: current ResultTable
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.ContextRow">
            <summary>
            For cell script execution: current ResultTable
            </summary>
        </member>
        <member name="F:Seal.Model.ResultCell.ContextCol">
            <summary>
            For cell script execution: current ResultTable
            </summary>
        </member>
        <member name="P:Seal.Model.ResultCell.ContextCurrentLine">
            <summary>
            For cell script execution: current line of the table (array of cell)
            </summary>
        </member>
        <member name="P:Seal.Model.ResultCell.ContextIsPageTable">
            <summary>
            For cell script execution: true if the cell is in a page table
            </summary>
        </member>
        <member name="P:Seal.Model.ResultCell.ContextIsSummaryTable">
            <summary>
            For cell script execution: true if the cell is in a summary table
            </summary>
        </member>
        <member name="T:Seal.Model.ResultData">
            <summary>
            Arrays of ResultCell stored in the ResultPage generated after a report model execution
            </summary>
        </member>
        <member name="F:Seal.Model.ResultData.Row">
            <summary>
            Array of ResultCell for Row
            </summary>
        </member>
        <member name="F:Seal.Model.ResultData.Column">
            <summary>
            Array of ResultCell for Column
            </summary>
        </member>
        <member name="F:Seal.Model.ResultData.Data">
            <summary>
            Array of ResultCell for Data
            </summary>
        </member>
        <member name="F:Seal.Model.ResultData.Hidden">
            <summary>
            Array of ResultCell for Hidden cells (for navigation)
            </summary>
        </member>
        <member name="T:Seal.Model.ResultPage">
            <summary>
            A ResultPage is a generated for each page value after a model execution. It stores the Pages, Rows, Columns, Datas and Series results.
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.Report">
            <summary>
            Current report
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.Model">
            <summary>
            Current model
            </summary>
        </member>
        <member name="P:Seal.Model.ResultPage.PageId">
            <summary>
            Unique identifier for execution
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.Pages">
            <summary>
            Cells generated for the Pages elements
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.Rows">
            <summary>
            Cells generated for the Rows elements
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.Columns">
            <summary>
            Cells generated for the Columns elements
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.Datas">
            <summary>
            Cells generated for the Datas elements
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.Series">
            <summary>
            ResultSerie generated if a serie is defined
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.PrimaryXDimensions">
            <summary>
            Cells used for the primary X axis of the chart
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.SecondaryXDimensions">
            <summary>
            Cells used for the secondary X axis of the chart
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.PrimaryXValues">
            <summary>
            Valus used for the secondary X axis of the chart
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.SecondaryXValues">
            <summary>
            Values used for the secondary X axis of the chart
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.PageTable">
            <summary>
            Current ResultTable for the page table
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.DataTable">
            <summary>
            Current ResultTable for the data table
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.ChartInitDone">
            <summary>
            True is the chart initialisation was done
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.ChartXLabels">
            <summary>
            X labels for the chart
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.ChartNavigations">
            <summary>
            Navigation for the chart
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.AxisXLabelMaxLen">
            <summary>
            Max length to adjust X axis margins 
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.AxisYPrimaryMaxLen">
            <summary>
            Max length to adjust Y primary axis margins 
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.AxisYSecondaryMaxLen">
            <summary>
            Max length to adjust Y secondary axis margins 
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.Tag">
            <summary>
            Custom Tag the can be used at execution time to store any object
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.Tag2">
            <summary>
            Custom Tag the can be used at execution time to store any object
            </summary>
        </member>
        <member name="F:Seal.Model.ResultPage.Tag3">
            <summary>
            Custom Tag the can be used at execution time to store any object
            </summary>
        </member>
        <member name="T:Seal.Model.ResultSerieComparer">
            <summary>
            Class to sort the result series when rendering in the view
            </summary>
        </member>
        <member name="T:Seal.Model.ResultSerie">
            <summary>
            ResultSerie is a serie result got after a model execution
            </summary>
        </member>
        <member name="F:Seal.Model.ResultSerie.SplitterValues">
            <summary>
            Splitter values as a string
            </summary>
        </member>
        <member name="F:Seal.Model.ResultSerie.SplitterCells">
            <summary>
            Result cells used for splitting 
            </summary>
        </member>
        <member name="F:Seal.Model.ResultSerie.Element">
            <summary>
            Current element
            </summary>
        </member>
        <member name="F:Seal.Model.ResultSerie.Values">
            <summary>
            List of ResultSerieValue
            </summary>
        </member>
        <member name="P:Seal.Model.ResultSerie.SerieDisplayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="P:Seal.Model.ResultSerie.SortAscending">
            <summary>
            True is the splitted element is sort ASC, false for DESC 
            </summary>
        </member>
        <member name="P:Seal.Model.ResultSerie.NVD3MultiChartType">
            <summary>
            For NVD3 serie, returns the chart type
            </summary>
        </member>
        <member name="M:Seal.Model.ResultSerie.CompareSeries(Seal.Model.ResultSerie,Seal.Model.ResultSerie)">
            <summary>
            Compares 2 ResultSerie objects
            </summary>
        </member>
        <member name="T:Seal.Model.ResultSerieValue">
            <summary>
            Defines a serie value (One to several X values, one Y value)
            </summary>
        </member>
        <member name="F:Seal.Model.ResultSerieValue.XDimensionValues">
            <summary>
            X Values
            </summary>
        </member>
        <member name="F:Seal.Model.ResultSerieValue.Yvalue">
            <summary>
            Y Value
            </summary>
        </member>
        <member name="T:Seal.Model.ResultTable">
            <summary>
            ResultTable are generated after a model execution. It stores list of arrays of ResultCell.
            </summary>
        </member>
        <member name="F:Seal.Model.ResultTable.BodyStartRow">
            <summary>
            Start row of the body of the table
            </summary>
        </member>
        <member name="F:Seal.Model.ResultTable.BodyEndRow">
            <summary>
            End row of the body of the table
            </summary>
        </member>
        <member name="F:Seal.Model.ResultTable.BodyStartColumn">
            <summary>
            Strat column of the body
            </summary>
        </member>
        <member name="F:Seal.Model.ResultTable.TotalCells">
            <summary>
            List of the ResultTotalCell of the table
            </summary>
        </member>
        <member name="F:Seal.Model.ResultTable.Lines">
            <summary>
            List of a arrays of ResultCell
            </summary>
        </member>
        <member name="F:Seal.Model.ResultTable.InvertDone">
            <summary>
            True if the table has been inverted
            </summary>
        </member>
        <member name="F:Seal.Model.ResultTable.Tag">
            <summary>
            Custom Tag the can be used at execution time to store any object
            </summary>
        </member>
        <member name="F:Seal.Model.ResultTable.Tag2">
            <summary>
            Custom Tag the can be used at execution time to store any object
            </summary>
        </member>
        <member name="F:Seal.Model.ResultTable.Tag3">
            <summary>
            Custom Tag the can be used at execution time to store any object
            </summary>
        </member>
        <member name="M:Seal.Model.ResultTable.GetLoadTableData(Seal.Model.ReportView,System.String)">
            <summary>
            Function to return partial table data to the report result
            </summary>
        </member>
        <member name="M:Seal.Model.ResultTable.SetColumnHidden(System.Int32)">
            <summary>
            Set a column as hidden
            </summary>
        </member>
        <member name="M:Seal.Model.ResultTable.IsColumnHidden(System.Int32)">
            <summary>
            True if the column is hidden
            </summary>
        </member>
        <member name="P:Seal.Model.ResultTable.RowCount">
            <summary>
            Row count of the table
            </summary>
        </member>
        <member name="P:Seal.Model.ResultTable.ColumnCount">
            <summary>
            Column count of the table
            </summary>
        </member>
        <member name="P:Seal.Model.ResultTable.Item(System.Int32,System.Int32)">
            <summary>
            Helper to access a ResultCell of the table
            </summary>
        </member>
        <member name="M:Seal.Model.ResultTable.IsSubTotalRow(System.Int32)">
            <summary>
            True if the row is a sub-total
            </summary>
        </member>
        <member name="M:Seal.Model.ResultTable.GetDataTable">
            <summary>
            Returns the ResultTable as a DataTable
            </summary>
        </member>
        <member name="M:Seal.Model.ResultTable.GetCol(System.String)">
            <summary>
            Returns the column number from the element column name. -1 if not found.
            </summary>
        </member>
        <member name="M:Seal.Model.ResultTable.HasNavigation(Seal.Model.ReportView,System.Int32,System.Int32)">
            <summary>
            True if the column has cells with navigation links
            </summary>
        </member>
        <member name="T:Seal.Model.ResultTotalCell">
            <summary>
            A ResultTotalCell is a ResultCell dedicated for totals
            </summary>
        </member>
        <member name="F:Seal.Model.ResultTotalCell.Sum">
            <summary>
            Sum, Min, Max after claculations
            </summary>
        </member>
        <member name="F:Seal.Model.ResultTotalCell.Min">
            <summary>
            Sum, Min, Max after claculations
            </summary>
        </member>
        <member name="F:Seal.Model.ResultTotalCell.Max">
            <summary>
            Sum, Min, Max after claculations
            </summary>
        </member>
        <member name="F:Seal.Model.ResultTotalCell.DateSum">
            <summary>
            Date sum after claculations
            </summary>
        </member>
        <member name="F:Seal.Model.ResultTotalCell.DateMin">
            <summary>
            Date Min and Max after calculations
            </summary>
        </member>
        <member name="F:Seal.Model.ResultTotalCell.DateMax">
            <summary>
            Date Min and Max after calculations
            </summary>
        </member>
        <member name="F:Seal.Model.ResultTotalCell.Cells">
            <summary>
            List of ResultCell
            </summary>
        </member>
        <member name="M:Seal.Model.ResultTotalCell.Calculate">
            <summary>
            Perform the calculations
            </summary>
        </member>
        <member name="M:Seal.Model.ResultTotalCell.ProcessContext">
            <summary>
            Set the common row or col of the cells part of the total. May be used in the cell script for Series values
            </summary>
        </member>
        <member name="T:Seal.Model.RootComponent">
            <summary>
            Base class containing a GUID and a Name
            </summary>
        </member>
        <member name="P:Seal.Model.RootComponent.GUID">
            <summary>
            The unique identifier
            </summary>
        </member>
        <member name="P:Seal.Model.RootComponent.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="T:Seal.Model.SWIUserProfile">
            <summary>
            Class used for the Seal Web Interface: Communication from the Browser to the Web Report Server
            </summary>
        </member>
        <member name="T:Seal.Model.SWIFolder">
            <summary>
            Class used for the Seal Web Interface: Communication from the Browser to the Web Report Server
            </summary>
        </member>
        <member name="F:Seal.Model.SWIFolder.path">
            <summary>
            Relative folder path including name
            </summary>
        </member>
        <member name="F:Seal.Model.SWIFolder.name">
            <summary>
            Folder name
            </summary>
        </member>
        <member name="F:Seal.Model.SWIFolder.fullname">
            <summary>
            Full folder path including name
            </summary>
        </member>
        <member name="F:Seal.Model.SWIFolder.right">
            <summary>
            Right applied on the folder files/reports:
            0: No right
            1: Execute reports / View files
            2: Execute reports and outputs / View files
            3: Edit schedules / View files
            4: Edit reports / Manage files
            </summary>
        </member>
        <member name="F:Seal.Model.SWIFolder.sql">
            <summary>
            True if Sql Model and Sql can be edited
            </summary>
        </member>
        <member name="F:Seal.Model.SWIFolder.expand">
            <summary>
            If true, the folder is expanded after the login
            </summary>
        </member>
        <member name="F:Seal.Model.SWIFolder.files">
            <summary>
            If true, only files can be displayed in this folder
            </summary>
        </member>
        <member name="F:Seal.Model.SWIFolder.manage">
            <summary>
            Sub-folders management:
            0 do not manage sub-folders
            1 manage sub-folders only as they are defined by the security (no rename or delete allowed)
            2 manage all: create, delete and rename sub-folders
            </summary>
        </member>
        <member name="F:Seal.Model.SWIFolder.folders">
            <summary>
            List of folder children.
            </summary>
        </member>
        <member name="T:Seal.Model.SWIFile">
            <summary>
            Class used for the Seal Web Interface: Communication from the Browser to the Web Report Server
            </summary>
        </member>
        <member name="F:Seal.Model.SWIFile.path">
            <summary>
            File path
            </summary>
        </member>
        <member name="F:Seal.Model.SWIFile.name">
            <summary>
            File name
            </summary>
        </member>
        <member name="F:Seal.Model.SWIFile.last">
            <summary>
            Last modification
            </summary>
        </member>
        <member name="F:Seal.Model.SWIFile.isreport">
            <summary>
            True if the file is a report
            </summary>
        </member>
        <member name="F:Seal.Model.SWIFile.right">
            <summary>
            Right applied on the file/report:
            0: No right
            1: Execute reports / View files
            2: Execute reports and outputs / View files
            3: Edit schedules / View files
            4: Edit reports / Manage files
            </summary>
        </member>
        <member name="T:Seal.Model.SWIFolderDetail">
            <summary>
            Class used for the Seal Web Interface: Communication from the Browser to the Web Report Server
            </summary>
        </member>
        <member name="T:Seal.Model.SWIView">
            <summary>
            Class used for the Seal Web Interface: Communication from the Browser to the Web Report Server
            </summary>
        </member>
        <member name="T:Seal.Model.SWIOutput">
            <summary>
            Class used for the Seal Web Interface: Communication from the Browser to the Web Report Server
            </summary>
        </member>
        <member name="T:Seal.Model.SWIReportDetail">
            <summary>
            Class used for the Seal Web Interface: Communication from the Browser to the Web Report Server
            </summary>
        </member>
        <member name="T:Seal.Model.SWIItem">
            <summary>
            Class used for the Seal Web Interface: Communication from the Browser to the Web Report Server
            </summary>
        </member>
        <member name="T:Seal.Model.SWIWebMenu">
            <summary>
            Class used for the Seal Web Interface: Communication from the Browser to the Web Report Server
            </summary>
        </member>
        <member name="T:Seal.Model.SWIMenuItem">
            <summary>
            Class used for the Seal Web Interface: Communication from the Browser to the Web Report Server
            </summary>
        </member>
        <member name="T:Seal.Model.SealSchedule">
            <summary>
            SealSchedule defines a schedule when the Seal Report Scheduler is active.
            </summary>
        </member>
        <member name="P:Seal.Model.SealSchedule.GUID">
            <summary>
            Unique identifier of the schedule
            </summary>
        </member>
        <member name="P:Seal.Model.SealSchedule.ReportPath">
            <summary>
            File path of the report scheduled 
            </summary>
        </member>
        <member name="P:Seal.Model.SealSchedule.ReportGUID">
            <summary>
            GUID of the report scheduled
            </summary>
        </member>
        <member name="P:Seal.Model.SealSchedule.NextExecution">
            <summary>
            Next execution date time of the schedule
            </summary>
        </member>
        <member name="P:Seal.Model.SealSchedule.Enabled">
            <summary>
            True if the schedule is enable
            </summary>
        </member>
        <member name="P:Seal.Model.SealSchedule.Start">
            <summary>
            Start date time of the schedule
            </summary>
        </member>
        <member name="P:Seal.Model.SealSchedule.End">
            <summary>
            End date time of the schedule
            </summary>
        </member>
        <member name="P:Seal.Model.SealSchedule.Type">
            <summary>
            Trigger type of the schedule
            </summary>
        </member>
        <member name="P:Seal.Model.SealSchedule.DaysInterval">
            <summary>
            Number of days for the interval
            </summary>
        </member>
        <member name="P:Seal.Model.SealSchedule.WeeksInterval">
            <summary>
            Number of weeks for the interval
            </summary>
        </member>
        <member name="P:Seal.Model.SealSchedule.Weekdays">
            <summary>
            Weekdays of the schedule
            </summary>
        </member>
        <member name="P:Seal.Model.SealSchedule.Months">
            <summary>
            Months of the schedule
            </summary>
        </member>
        <member name="P:Seal.Model.SealSchedule.Days">
            <summary>
            Days of the schedule
            </summary>
        </member>
        <member name="P:Seal.Model.SealSchedule.RepeatInterval">
            <summary>
            Repeat interval in TimeSpan
            </summary>
        </member>
        <member name="P:Seal.Model.SealSchedule.RepeatIntervalTicks">
            <summary>
            Repeat interval in ticks
            </summary>
        </member>
        <member name="P:Seal.Model.SealSchedule.RepeatDuration">
            <summary>
            Repeat duration in TimeSpan
            </summary>
        </member>
        <member name="P:Seal.Model.SealSchedule.RepeatDurationTicks">
            <summary>
            Repeat duration in ticks
            </summary>
        </member>
        <member name="F:Seal.Model.SealSchedule.BeingExecuted">
            <summary>
            True if the schedule is beign executed by the scheduler
            </summary>
        </member>
        <member name="F:Seal.Model.SealSchedule.FilePath">
            <summary>
            Current file path of the web schedule
            </summary>
        </member>
        <member name="F:Seal.Model.SealSchedule.LastModification">
            <summary>
            Last modification date of the seal schedule
            </summary>
        </member>
        <member name="M:Seal.Model.SealSchedule.LoadFromFile(System.String)">
            <summary>
            Load a web schedule from a file
            </summary>
        </member>
        <member name="M:Seal.Model.SealSchedule.SaveToFile">
            <summary>
            Save the current web schedule to its file
            </summary>
        </member>
        <member name="M:Seal.Model.SealSchedule.CalculateNextExecution">
            <summary>
            Calculate and update the next schedule execution
            </summary>
        </member>
        <member name="M:Seal.Model.SealSchedule.IsReached">
            <summary>
            True is the next execution is reached
            </summary>
            <returns></returns>
        </member>
        <member name="T:Seal.Model.SealReportScheduler">
            <summary>
            Main Scheduler to execute the report schedules defined in a repository.
            </summary>
        </member>
        <member name="F:Seal.Model.SealReportScheduler.Running">
            <summary>
            True if the scheduler is running
            </summary>
        </member>
        <member name="P:Seal.Model.SealReportScheduler.Instance">
            <summary>
            A general static instance of the Scheduler.
            </summary>
        </member>
        <member name="M:Seal.Model.SealReportScheduler.Run">
            <summary>
            Run the scheduler
            </summary>
        </member>
        <member name="M:Seal.Model.SealReportScheduler.Shutdown">
            <summary>
            Stop the scheduler
            </summary>
        </member>
        <member name="M:Seal.Model.SealReportScheduler.SaveSchedule(Seal.Model.SealSchedule,Seal.Model.Report)">
            <summary>
            Save a schedule in the repository
            </summary>
        </member>
        <member name="M:Seal.Model.SealReportScheduler.DeleteSchedule(System.String)">
            <summary>
            Delete a schedule from the repository
            </summary>
        </member>
        <member name="M:Seal.Model.SealReportScheduler.GetSchedule(System.String)">
            <summary>
            Get a schedule from its identifier
            </summary>
        </member>
        <member name="M:Seal.Model.SealReportScheduler.CreateSchedule(System.String,System.String,Seal.Model.Report)">
            <summary>
            Create a new schedule for a report
            </summary>
        </member>
        <member name="M:Seal.Model.SealReportScheduler.GetSchedules">
            <summary>
            List of repository schedules
            </summary>
        </member>
        <member name="T:Seal.Helpers.DataTableLoader">
            <summary>
            Helper to load data tables to define No SQL table sources
            </summary>   
        </member>
        <member name="M:Seal.Helpers.DataTableLoader.FromExcel(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            Load a DataTable from an Excel file. A start and end row, and/or colum can be specified. If hasHeader is false, column names are automatic. 
        </member>
        <member name="M:Seal.Helpers.DataTableLoader.FromCSV(System.String,System.Nullable{System.Char},System.Text.Encoding)">
            <summary>
            Returns a DataTable from a CSV file
            </summary>
        </member>
        <member name="M:Seal.Helpers.DataTableLoader.FromCSVVBParser(System.String,System.Nullable{System.Char},System.Text.Encoding)">
            <summary>
            Returns a DataTable from a CSV file using the Microsoft VB Parser
            </summary>
        </member>
        <member name="M:Seal.Helpers.DataTableLoader.FromAdomdCommand(Microsoft.AnalysisServices.AdomdClient.AdomdCommand)">
            <summary>
            Returns a DataTable from an AdomdCommand reader (MDX Query in an OLAP Cube)
            </summary>
        </member>
        <member name="T:Seal.Helpers.Helper">
            <summary>
            Helper Objects
            </summary>
        </member>
        <member name="M:Seal.Helpers.Helper.AddEmailAddresses(System.Net.Mail.MailAddressCollection,System.String)">
            <summary>
            Add email address to a MailAddressCollection
            </summary>
        </member>
        <member name="M:Seal.Helpers.Helper.ToString(System.Object)">
            <summary>
            Convert an objet to a string, handling DBNull value
            </summary>
        </member>
        <member name="M:Seal.Helpers.Helper.ToDateTime(System.Object)">
            <summary>
            Convert an objet to a datetime, handling DBNull value
            </summary>
        </member>
        <member name="M:Seal.Helpers.Helper.ToDouble(System.Object)">
            <summary>
            Convert an objet to a double, handling DBNull value
            </summary>
        </member>
        <member name="M:Seal.Helpers.ObjectShredder`1.Shred(System.Collections.Generic.IEnumerable{`0},System.Data.DataTable,System.Nullable{System.Data.LoadOption})">
            <summary>
            Loads a DataTable from a sequence of objects.
            </summary>
            <param name="source">The sequence of objects to load into the DataTable.</param>
            <param name="table">The input table. The schema of the table must match that
            the type T.  If the table is null, a new table is created with a schema
            created from the public properties and fields of the type T.</param>
            <param name="options">Specifies how values from the source sequence will be applied to
            existing rows in the table.</param>
            <returns>A DataTable created from the source sequence.</returns>
        </member>
        <member name="M:Seal.Helpers.ExcelHelper.LoadDataTableFromExcel(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Load a DataTable from an Excel file. A start and end row, and/or colum can be specified. If hasHeader is false, column names are automatic. 
            </summary>
        </member>
        <member name="T:Seal.Helpers.Impersonator">
             <summary>
             Allows code to be executed under the security context of a specified user account.
             </summary>
             <remarks> 
            
             Implements IDispose, so can be used via a using-directive or method calls;
              ...
            
              var imp = new Impersonator( "myUsername", "myDomainname", "myPassword" );
              imp.UndoImpersonation();
            
              ...
            
               var imp = new Impersonator();
              imp.Impersonate("myUsername", "myDomainname", "myPassword");
              imp.UndoImpersonation();
            
              ...
            
              using ( new Impersonator( "myUsername", "myDomainname", "myPassword" ) )
              {
               ...
               1
               ...
              }
            
              ...
             </remarks>
        </member>
        <member name="M:Seal.Helpers.Impersonator.#ctor(System.String,System.String,System.String,Seal.Helpers.LogonType,Seal.Helpers.LogonProvider)">
             <summary>
             Begins impersonation with the given credentials, Logon type and Logon provider.
             </summary>
            
        </member>
        <member name="M:Seal.Helpers.Impersonator.#ctor(System.String,System.String,System.String)">
             <summary>
             Begins impersonation with the given credentials.
             </summary>
            
        </member>
        <member name="M:Seal.Helpers.Impersonator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Seal.Helpers.Impersonator"/> class.
            </summary>
        </member>
        <member name="M:Seal.Helpers.Impersonator.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Seal.Helpers.Impersonator.Impersonate(System.String,System.String,System.String)">
             <summary>
             Impersonates the specified user account.
             </summary>
            
        </member>
        <member name="M:Seal.Helpers.Impersonator.Impersonate(System.String,System.String,System.String,Seal.Helpers.LogonType,Seal.Helpers.LogonProvider)">
             <summary>
             Impersonates the specified user account.
             </summary>
            
        </member>
        <member name="M:Seal.Helpers.Impersonator.UndoImpersonation">
            <summary>
            Stops impersonation.
            </summary>
        </member>
        <member name="M:Seal.Helpers.TaskHelper.LoadTablesFromExcel(System.String,System.String,System.String[],System.String[],System.Boolean)">
            <summary>
            Load tables from Excel tabs (one table per tab)
            </summary>
        </member>
        <member name="M:Seal.Helpers.TaskHelper.LoadTableFromExcel(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            Load a table from an Excel tab into the database. A start row, and/or colum can be specified. An end column can be specified. 
            </summary>
        </member>
        <member name="M:Seal.Helpers.TaskHelper.ExecuteMSSQLFile(System.String,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Execute a .sql file
            </summary>
        </member>
        <member name="M:Seal.Helpers.TaskHelper.ExecuteMSSQLScripts(System.String,System.Boolean,System.Boolean,System.Int32,System.String)">
            <summary>
            Execute .sql files located in a directory
            </summary>
        </member>
        <member name="T:Seal.Helpers.NamespaceDoc">
            <summary>
            Helper Objects
            </summary>
        </member>
        <member name="T:Seal.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Seal.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Seal.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Seal.Properties.Resources.checkedBlue">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Seal.Properties.Resources.checkedGreen">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Seal.Properties.Resources.checkedRed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Seal.Properties.Resources.error">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Seal.Properties.Resources.error2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Seal.Properties.Resources.helper">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Seal.Properties.Resources.information">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Seal.Properties.Resources.reportDesigner">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:Seal.Properties.Resources.seal_barking">
            <summary>
              Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
            </summary>
        </member>
        <member name="P:Seal.Properties.Resources.serverManager">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="E:DynamicTypeDescriptor.PropertyValueUIService.System#Drawing#Design#IPropertyValueUIService#PropertyUIValueItemsChanged">
            <summary>
            Adds or removes an event handler that will be invoked
            when the global list of PropertyValueUIItems is modified.
            </summary>
        </member>
        <member name="M:DynamicTypeDescriptor.PropertyValueUIService.System#Drawing#Design#IPropertyValueUIService#NotifyPropertyValueUIItemsChanged">
            <summary>
            Tell the IPropertyValueUIService implementation that the global list of PropertyValueUIItems has been modified.
            </summary>
        </member>
        <member name="M:DynamicTypeDescriptor.PropertyValueUIService.System#Drawing#Design#IPropertyValueUIService#AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)">
            <summary>
            Adds a PropertyValueUIHandler to this service.  When GetPropertyUIValueItems is
            called, each handler added to this service will be called and given the opportunity
            to add an icon to the specified property.
            </summary>
            <param name="newHandler"></param>
        </member>
        <member name="M:DynamicTypeDescriptor.PropertyValueUIService.System#Drawing#Design#IPropertyValueUIService#RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)">
            <summary>
            Removes a PropertyValueUIHandler to this service.  When GetPropertyUIValueItems is
            called, each handler added to this service will be called and given the opportunity
            to add an icon to the specified property.
            </summary>
            <param name="newHandler"></param>
        </member>
        <member name="M:DynamicTypeDescriptor.PropertyValueUIService.System#Drawing#Design#IPropertyValueUIService#GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Gets all the PropertyValueUIItems that should be displayed on the given property.
            For each item returned, a glyph icon will be aded to the property.
            </summary>
            <param name="context"></param>
            <param name="propDesc"></param>
            <returns></returns>
        </member>
        <member name="P:DynamicTypeDescriptor.CustomPropertyDescriptor.IsLocalizable">
            <summary>
            Must override abstract properties.
            </summary>
            
        </member>
        <member name="M:DynamicTypeDescriptor.CustomPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            Abstract base members
            </summary>			
        </member>
        <member name="F:DynamicTypeDescriptor.StandardValueEditorUI.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:DynamicTypeDescriptor.StandardValueEditorUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DynamicTypeDescriptor.StandardValueEditorUI.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
